/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { skip } from "rxjs/operators";
/**
 * Base class that acts as a component messages container.
 *
 * For internal use.
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export class ComponentMessages {
    get override() {
        return false;
    }
    ngOnChanges(changes) {
        this.register(changes);
        if (Object.keys(changes).some(field => !changes[field].isFirstChange())) {
            this.service.notifyChanges();
        }
    }
    ngOnInit() {
        this.subscription = this.service.changes.pipe(skip(1)).subscribe(() => this.register(this));
    }
    register(changes) {
        const keys = Object.keys(changes);
        keys.forEach(key => this.service.register(key, this[key], this.override));
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
}
ComponentMessages.ɵfac = function ComponentMessages_Factory(t) { return new (t || ComponentMessages)(); };
ComponentMessages.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ComponentMessages, features: [ɵngcc0.ɵɵNgOnChangesFeature] });

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LW1lc3NhZ2VzLmpzIiwic291cmNlcyI6WyJjb21wb25lbnQtbWVzc2FnZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IHNraXAgfSBmcm9tIFwicnhqcy9vcGVyYXRvcnNcIjtcbi8qKlxuICogQmFzZSBjbGFzcyB0aGF0IGFjdHMgYXMgYSBjb21wb25lbnQgbWVzc2FnZXMgY29udGFpbmVyLlxuICpcbiAqIEZvciBpbnRlcm5hbCB1c2UuXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21wb25lbnRNZXNzYWdlcyB7XG4gICAgZ2V0IG92ZXJyaWRlKCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXMpIHtcbiAgICAgICAgdGhpcy5yZWdpc3RlcihjaGFuZ2VzKTtcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKGNoYW5nZXMpLnNvbWUoZmllbGQgPT4gIWNoYW5nZXNbZmllbGRdLmlzRmlyc3RDaGFuZ2UoKSkpIHtcbiAgICAgICAgICAgIHRoaXMuc2VydmljZS5ub3RpZnlDaGFuZ2VzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uID0gdGhpcy5zZXJ2aWNlLmNoYW5nZXMucGlwZShza2lwKDEpKS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5yZWdpc3Rlcih0aGlzKSk7XG4gICAgfVxuICAgIHJlZ2lzdGVyKGNoYW5nZXMpIHtcbiAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGNoYW5nZXMpO1xuICAgICAgICBrZXlzLmZvckVhY2goa2V5ID0+IHRoaXMuc2VydmljZS5yZWdpc3RlcihrZXksIHRoaXNba2V5XSwgdGhpcy5vdmVycmlkZSkpO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19