/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var rxjs_1 = require("rxjs");
/* tslint:disable:max-line-length */
/**
 * A base class for a service that returns localized messages.
 *
 * For more information, refer to the section on [using the message service]({% slug messages_l10n %}#toc-using-the-message-service).
 */
var ɵngcc0 = require('@angular/core');
var MessageService = /** @class */ (function () {
    function MessageService() {
        /**
         * @hidden
         */
        this.changes = new rxjs_1.Subject();
    }
    /**
     * Notifies the components that the messages were changed.
     *
     * @param rtl - (Optional) A new value for the [text direction token]({% slug api_l10n_rtl %}).
     */
    MessageService.prototype.notify = function (rtl) {
        this.changes.next({ rtl: rtl });
    };
    /**
     * Returns a localized message for the supplied key.
     *
     * @param key - The message key. For example, `"kendo.grid.noRecords"`.
     * @return - The localized message for this key or `undefined` if not found.
     */
    MessageService.prototype.get = function (key) {
        return undefined;
    };
MessageService.ɵfac = function MessageService_Factory(t) { return new (t || MessageService)(); };
MessageService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MessageService, factory: function (t) { return MessageService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MessageService, [{
        type: core_1.Injectable
    }], function () { return []; }, null); })();
    return MessageService;
}());
exports.MessageService = MessageService;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJtZXNzYWdlLnNlcnZpY2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Z0RBR3VCO0FBQ3ZCO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG52YXIgY29yZV8xID0gcmVxdWlyZShcIkBhbmd1bGFyL2NvcmVcIik7XG52YXIgcnhqc18xID0gcmVxdWlyZShcInJ4anNcIik7XG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cbi8qKlxuICogQSBiYXNlIGNsYXNzIGZvciBhIHNlcnZpY2UgdGhhdCByZXR1cm5zIGxvY2FsaXplZCBtZXNzYWdlcy5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcmVmZXIgdG8gdGhlIHNlY3Rpb24gb24gW3VzaW5nIHRoZSBtZXNzYWdlIHNlcnZpY2VdKHslIHNsdWcgbWVzc2FnZXNfbDEwbiAlfSN0b2MtdXNpbmctdGhlLW1lc3NhZ2Utc2VydmljZSkuXG4gKi9cbnZhciBNZXNzYWdlU2VydmljZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNZXNzYWdlU2VydmljZSgpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY2hhbmdlcyA9IG5ldyByeGpzXzEuU3ViamVjdCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBOb3RpZmllcyB0aGUgY29tcG9uZW50cyB0aGF0IHRoZSBtZXNzYWdlcyB3ZXJlIGNoYW5nZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcnRsIC0gKE9wdGlvbmFsKSBBIG5ldyB2YWx1ZSBmb3IgdGhlIFt0ZXh0IGRpcmVjdGlvbiB0b2tlbl0oeyUgc2x1ZyBhcGlfbDEwbl9ydGwgJX0pLlxuICAgICAqL1xuICAgIE1lc3NhZ2VTZXJ2aWNlLnByb3RvdHlwZS5ub3RpZnkgPSBmdW5jdGlvbiAocnRsKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlcy5uZXh0KHsgcnRsOiBydGwgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbG9jYWxpemVkIG1lc3NhZ2UgZm9yIHRoZSBzdXBwbGllZCBrZXkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ga2V5IC0gVGhlIG1lc3NhZ2Uga2V5LiBGb3IgZXhhbXBsZSwgYFwia2VuZG8uZ3JpZC5ub1JlY29yZHNcImAuXG4gICAgICogQHJldHVybiAtIFRoZSBsb2NhbGl6ZWQgbWVzc2FnZSBmb3IgdGhpcyBrZXkgb3IgYHVuZGVmaW5lZGAgaWYgbm90IGZvdW5kLlxuICAgICAqL1xuICAgIE1lc3NhZ2VTZXJ2aWNlLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICBNZXNzYWdlU2VydmljZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIGNvcmVfMS5JbmplY3RhYmxlKClcbiAgICBdLCBNZXNzYWdlU2VydmljZSk7XG4gICAgcmV0dXJuIE1lc3NhZ2VTZXJ2aWNlO1xufSgpKTtcbmV4cG9ydHMuTWVzc2FnZVNlcnZpY2UgPSBNZXNzYWdlU2VydmljZTtcbiJdfQ==