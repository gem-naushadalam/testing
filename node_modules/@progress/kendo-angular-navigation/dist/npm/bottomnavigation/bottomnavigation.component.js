/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var select_event_1 = require("./events/select-event");
var core_1 = require("@angular/core");
var kendo_angular_l10n_1 = require("@progress/kendo-angular-l10n");
var rxjs_1 = require("rxjs");
var kendo_angular_common_1 = require("@progress/kendo-angular-common");
var item_template_directive_1 = require("./templates/item-template.directive");
var dom_queries_1 = require("../common/dom-queries");
var constants_1 = require("./constants");
/**
 * Represents the [Kendo UI BottomNavigation component for Angular]({% slug overview_bottomnavigation %}).
 *
 * @example
 * ```ts-no-run
 * _@Component({
 *      selector: 'my-app',
 *      template: `
 *          <kendo-bottomnavigation [items]="items"></kendo-bottomnavigation>
 *      `
 * })
 * class AppComponent {
 *      public items: Array<any> = [
 *          { text: 'Inbox', icon: 'email', selected: true },
 *          { text: 'Calendar', icon: 'calendar'},
 *          { text: 'Profile', icon: 'user'}
 *      ]
 * }
 * ```
 */
var ɵngcc0 = require('@angular/core');
var ɵngcc1 = require('@progress/kendo-angular-l10n');
var ɵngcc2 = require('@angular/common');
var ɵngcc3 = require('./bottomnavigation-item.component');

function BottomNavigationComponent_ng_container_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 2);
} if (rf & 2) {
    var item_r2 = ctx.$implicit;
    var idx_r3 = ctx.index;
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("disabledComponent", ctx_r1.disabled)("item", item_r2)("index", idx_r3)("selectedIdx", ctx_r1.selectedIdx)("itemTemplate", ctx_r1.itemTemplate)("ngClass", item_r2.cssClass)("ngStyle", item_r2.cssStyle);
    ɵngcc0.ɵɵattribute("data-kendo-bottomnavigation-index", idx_r3);
} }
function BottomNavigationComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BottomNavigationComponent_ng_container_0_span_1_Template, 1, 8, "span", 1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.items);
} }
var BottomNavigationComponent = /** @class */ (function () {
    function BottomNavigationComponent(localization, hostElement, ngZone, changeDetector, renderer) {
        var _this = this;
        this.localization = localization;
        this.hostElement = hostElement;
        this.ngZone = ngZone;
        this.changeDetector = changeDetector;
        this.renderer = renderer;
        /**
         * Sets a top border to the BottomNavigation ([see example]({% slug appearance_bottomnavigation %})).
         *
         * @default false
         */
        this.border = false;
        /**
         * Disables the whole BottomNavigation.
         *
         * @default false
         */
        this.disabled = false;
        /**
         * Fires each time an item is selected. This event is preventable.
         */
        this.select = new core_1.EventEmitter();
        /**
         * @hidden
         */
        this.hostClass = true;
        /**
         * @hidden
         */
        this.role = 'navigation';
        this._fill = 'flat';
        this._itemFlow = 'vertical';
        this._positionMode = 'fixed';
        this._themeColor = 'primary';
        this._nativeHostElement = this.hostElement.nativeElement;
        this.subscriptions = new rxjs_1.Subscription();
        this.rtl = false;
        this.dynamicRTLSubscription = this.localization.changes.subscribe(function (_a) {
            var rtl = _a.rtl;
            _this.rtl = rtl;
            _this.direction = _this.rtl ? 'rtl' : 'ltr';
        });
    }
    Object.defineProperty(BottomNavigationComponent.prototype, "fill", {
        get: function () {
            return this._fill;
        },
        /**
         * The fill style of the BottomNavigation ([see example]({% slug appearance_bottomnavigation %})).
         *
         * * The possible values are:
         * * (Default) `flat`
         * * `solid`
         */
        set: function (fill) {
            this.renderer.removeClass(this._nativeHostElement, "k-bottom-nav-" + this.fill);
            this._fill = fill === 'solid' ? 'solid' : 'flat';
            this.renderer.addClass(this._nativeHostElement, "k-bottom-nav-" + this._fill);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BottomNavigationComponent.prototype, "itemFlow", {
        get: function () {
            return this._itemFlow;
        },
        /**
         * Specifies how the icon and text label are positioned in the BottomNavigation items ([see example]({% slug items_bottomnavigation %}#toc-itemflow)).
         *
         * The possible values are:
         * * (Default) `vertical` - Renders the text below the icon.
         * * `horizontal` - Renders the icon and the text on the same line.
         */
        set: function (itemFlow) {
            this.renderer.removeClass(this._nativeHostElement, "k-bottom-nav-item-flow-" + this.itemFlow);
            this._itemFlow = itemFlow === 'horizontal' ? 'horizontal' : 'vertical';
            this.renderer.addClass(this._nativeHostElement, "k-bottom-nav-item-flow-" + this._itemFlow);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BottomNavigationComponent.prototype, "positionMode", {
        get: function () {
            return this._positionMode;
        },
        /**
         * Specifies the position and behavior of the BottomNavigation when the page is scrollable ([see example]({% slug positioning_bottomnavigation %})).
         *
         * The possible values are:
         * * (Default) `fixed` - The BottomNavigation always stays at the bottom of the viewport, regardless of the page scroll position.
         * * `sticky` - Positions the BottomNavigation at the end of the scrollable container.
         */
        set: function (positionMode) {
            this.renderer.removeClass(this._nativeHostElement, "k-pos-" + this.positionMode);
            this._positionMode = positionMode === 'sticky' ? 'sticky' : 'fixed';
            this.renderer.addClass(this._nativeHostElement, "k-pos-" + this._positionMode);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BottomNavigationComponent.prototype, "themeColor", {
        get: function () {
            return this._themeColor;
        },
        /**
         * Specifies the theme color of the BottomNavigation ([see example]({% slug appearance_bottomnavigation %})).
         *
         * * The possible values are:
         * * (Default) `primary` - Applies coloring based on the primary theme color.
         * * `secondary` - Applies coloring based on the secondary theme color.
         * * `tertiary` - Applies coloring based on the tertiary theme color.
         * * `info` - Applies coloring based on the info theme color.
         * * `success` - Applies coloring based on the success theme color.
         * * `warning` - Applies coloring based on the warning theme color.
         * * `error` - Applies coloring based on the error theme color.
         * * `dark` - Applies coloring based on the dark theme color.
         * * `light` - Applies coloring based on the light theme color.
         * * `inverse` - Applies coloring based on the inverted theme color.
         */
        set: function (themeColor) {
            var newColor = constants_1.colors.find(function (color) { return color === themeColor; });
            if (newColor) {
                this.renderer.removeClass(this._nativeHostElement, "k-bottom-nav-" + this._themeColor);
                this._themeColor = themeColor;
                this.renderer.addClass(this._nativeHostElement, "k-bottom-nav-" + this._themeColor);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BottomNavigationComponent.prototype, "borderClass", {
        /**
         * @hidden
         */
        get: function () {
            return this.border;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BottomNavigationComponent.prototype, "disabledClass", {
        /**
         * @hidden
         */
        get: function () {
            return this.disabled;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden
     */
    BottomNavigationComponent.prototype.ngOnInit = function () {
        this.initDomEvents();
    };
    /**
     * @hidden
     */
    BottomNavigationComponent.prototype.ngAfterViewInit = function () {
        this.applyClasses();
    };
    /**
     * @hidden
     */
    BottomNavigationComponent.prototype.ngOnDestroy = function () {
        if (this.dynamicRTLSubscription) {
            this.dynamicRTLSubscription.unsubscribe();
        }
        this.subscriptions.unsubscribe();
    };
    /**
     * @hidden
     */
    BottomNavigationComponent.prototype.selectItem = function (idx, args) {
        var eventArgs = new select_event_1.BottomNavigationSelectEvent(tslib_1.__assign({}, args));
        this.select.emit(eventArgs);
        if (!eventArgs.isDefaultPrevented()) {
            this.selectedIdx = idx;
        }
    };
    BottomNavigationComponent.prototype.applyClasses = function () {
        this.renderer.addClass(this._nativeHostElement, "k-bottom-nav-" + this.fill);
        this.renderer.addClass(this._nativeHostElement, "k-bottom-nav-item-flow-" + this.itemFlow);
        this.renderer.addClass(this._nativeHostElement, "k-pos-" + this.positionMode);
        this.renderer.addClass(this._nativeHostElement, "k-bottom-nav-" + this.themeColor);
    };
    BottomNavigationComponent.prototype.initDomEvents = function () {
        var _this = this;
        if (!this.hostElement) {
            return;
        }
        this.ngZone.runOutsideAngular(function () {
            _this.subscriptions.add(_this.renderer.listen(_this._nativeHostElement, 'click', _this.clickHandler.bind(_this)));
            _this.subscriptions.add(_this.renderer.listen(_this._nativeHostElement, 'keydown', _this.keyDownHandler.bind(_this)));
        });
    };
    BottomNavigationComponent.prototype.clickHandler = function (e) {
        var _this = this;
        var itemIdx = this.getBottomNavigationItemIndex(e.target);
        var item = this.items[itemIdx];
        if (!item) {
            return;
        }
        if (item.disabled) {
            e.preventDefault();
            return;
        }
        var args = {
            index: itemIdx,
            item: item,
            originalEvent: e,
            sender: this
        };
        this.ngZone.run(function () {
            _this.selectItem(itemIdx, args);
            _this.changeDetector.markForCheck();
        });
    };
    BottomNavigationComponent.prototype.keyDownHandler = function (e) {
        var isEnterOrSpace = e.keyCode === kendo_angular_common_1.Keys.Enter || e.keyCode === kendo_angular_common_1.Keys.Space;
        if (!isEnterOrSpace) {
            return;
        }
        this.clickHandler(e);
    };
    BottomNavigationComponent.prototype.getBottomNavigationItemIndex = function (target) {
        var item = dom_queries_1.closestItem(target, constants_1.BOTTOMNAVIGATION_ITEM_INDEX, this._nativeHostElement);
        if (item) {
            return dom_queries_1.itemIndex(item, constants_1.BOTTOMNAVIGATION_ITEM_INDEX);
        }
    };
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Array)
    ], BottomNavigationComponent.prototype, "items", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], BottomNavigationComponent.prototype, "border", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], BottomNavigationComponent.prototype, "disabled", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], BottomNavigationComponent.prototype, "fill", null);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], BottomNavigationComponent.prototype, "itemFlow", null);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], BottomNavigationComponent.prototype, "positionMode", null);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], BottomNavigationComponent.prototype, "themeColor", null);
    tslib_1.__decorate([
        core_1.Output(),
        tslib_1.__metadata("design:type", core_1.EventEmitter)
    ], BottomNavigationComponent.prototype, "select", void 0);
    tslib_1.__decorate([
        core_1.HostBinding('class.k-bottom-nav'),
        tslib_1.__metadata("design:type", Boolean)
    ], BottomNavigationComponent.prototype, "hostClass", void 0);
    tslib_1.__decorate([
        core_1.HostBinding('class.k-bottom-nav-border'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [])
    ], BottomNavigationComponent.prototype, "borderClass", null);
    tslib_1.__decorate([
        core_1.HostBinding('class.k-state-disabled'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [])
    ], BottomNavigationComponent.prototype, "disabledClass", null);
    tslib_1.__decorate([
        core_1.HostBinding('attr.role'),
        tslib_1.__metadata("design:type", String)
    ], BottomNavigationComponent.prototype, "role", void 0);
    tslib_1.__decorate([
        core_1.HostBinding('attr.dir'),
        tslib_1.__metadata("design:type", String)
    ], BottomNavigationComponent.prototype, "direction", void 0);
    tslib_1.__decorate([
        core_1.ContentChild(item_template_directive_1.BottomNavigationItemTemplateDirective, { static: false }),
        tslib_1.__metadata("design:type", item_template_directive_1.BottomNavigationItemTemplateDirective)
    ], BottomNavigationComponent.prototype, "itemTemplate", void 0);
    BottomNavigationComponent = tslib_1.__decorate([ tslib_1.__metadata("design:paramtypes", [kendo_angular_l10n_1.LocalizationService,
            core_1.ElementRef,
            core_1.NgZone,
            core_1.ChangeDetectorRef,
            core_1.Renderer2])
    ], BottomNavigationComponent);
BottomNavigationComponent.ɵfac = function BottomNavigationComponent_Factory(t) { return new (t || BottomNavigationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
BottomNavigationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BottomNavigationComponent, selectors: [["kendo-bottomnavigation"]], contentQueries: function BottomNavigationComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, item_template_directive_1.BottomNavigationItemTemplateDirective, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);
    } }, hostVars: 8, hostBindings: function BottomNavigationComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role)("dir", ctx.direction);
        ɵngcc0.ɵɵclassProp("k-bottom-nav", ctx.hostClass)("k-bottom-nav-border", ctx.borderClass)("k-state-disabled", ctx.disabledClass);
    } }, inputs: { border: "border", disabled: "disabled", fill: "fill", itemFlow: "itemFlow", positionMode: "positionMode", themeColor: "themeColor", items: "items" }, outputs: { select: "select" }, exportAs: ["kendoBottomNavigation"], features: [ɵngcc0.ɵɵProvidersFeature([
            kendo_angular_l10n_1.LocalizationService,
            {
                provide: kendo_angular_l10n_1.L10N_PREFIX,
                useValue: 'kendo.bottomnavigation'
            }
        ])], decls: 1, vars: 1, consts: [[4, "ngIf"], ["kendoBottomNavigationItem", "", "role", "link", "class", "k-bottom-nav-item", 3, "disabledComponent", "item", "index", "selectedIdx", "itemTemplate", "ngClass", "ngStyle", 4, "ngFor", "ngForOf"], ["kendoBottomNavigationItem", "", "role", "link", 1, "k-bottom-nav-item", 3, "disabledComponent", "item", "index", "selectedIdx", "itemTemplate", "ngClass", "ngStyle"]], template: function BottomNavigationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BottomNavigationComponent_ng_container_0_Template, 2, 1, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.items);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc3.BottomNavigationItemComponent, ɵngcc2.NgClass, ɵngcc2.NgStyle], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BottomNavigationComponent, [{
        type: core_1.Component,
        args: [{
                exportAs: 'kendoBottomNavigation',
                selector: 'kendo-bottomnavigation',
                providers: [
                    kendo_angular_l10n_1.LocalizationService,
                    {
                        provide: kendo_angular_l10n_1.L10N_PREFIX,
                        useValue: 'kendo.bottomnavigation'
                    }
                ],
                template: "\n        <ng-container *ngIf=\"items\">\n            <span kendoBottomNavigationItem\n                *ngFor=\"let item of items; let idx=index\"\n                role=\"link\"\n                class=\"k-bottom-nav-item\"\n                [disabledComponent]=\"disabled\"\n                [item]=\"item\"\n                [index]=\"idx\"\n                [selectedIdx]=\"selectedIdx\"\n                [itemTemplate]=\"itemTemplate\"\n                [attr." + constants_1.BOTTOMNAVIGATION_ITEM_INDEX + "]=\"idx\"\n                [ngClass]=\"item.cssClass\"\n                [ngStyle]=\"item.cssStyle\">\n            </span>\n        </ng-container>\n    "
            }]
    }], function () { return [{ type: ɵngcc1.LocalizationService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }]; }, { border: [{
            type: core_1.Input
        }], disabled: [{
            type: core_1.Input
        }], select: [{
            type: core_1.Output
        }], hostClass: [{
            type: core_1.HostBinding,
            args: ['class.k-bottom-nav']
        }], role: [{
            type: core_1.HostBinding,
            args: ['attr.role']
        }], fill: [{
            type: core_1.Input
        }], itemFlow: [{
            type: core_1.Input
        }], positionMode: [{
            type: core_1.Input
        }], themeColor: [{
            type: core_1.Input
        }], borderClass: [{
            type: core_1.HostBinding,
            args: ['class.k-bottom-nav-border']
        }], disabledClass: [{
            type: core_1.HostBinding,
            args: ['class.k-state-disabled']
        }], items: [{
            type: core_1.Input
        }], direction: [{
            type: core_1.HostBinding,
            args: ['attr.dir']
        }], itemTemplate: [{
            type: core_1.ContentChild,
            args: [item_template_directive_1.BottomNavigationItemTemplateDirective, { static: false }]
        }] }); })();
    return BottomNavigationComponent;
}());
exports.BottomNavigationComponent = BottomNavigationComponent;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,