/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var rxjs_1 = require("rxjs");
var operators_1 = require("rxjs/operators");
var kendo_angular_common_1 = require("@progress/kendo-angular-common");
var constants_1 = require("./models/constants");
var breadcrumb_item_component_1 = require("./breadcrumb-item.component");
var dom_queries_1 = require("../common/dom-queries");
var util_1 = require("../common/util");
/**
 * @hidden
 */
var ɵngcc0 = require('@angular/core');
var ɵngcc1 = require('@angular/common');
var ɵngcc2 = require('./breadcrumb-item.component');
var ɵngcc3 = require('./template-directives/separator.directive');

var _c0 = ["kendoBreadCrumbList", ""];
function BreadCrumbListComponent_ng_container_0_li_1_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 5);
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("icon", ctx_r7.separatorIcon);
} }
function BreadCrumbListComponent_ng_container_0_li_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 5);
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("icon", ctx_r8.separatorIcon);
} }
function BreadCrumbListComponent_ng_container_0_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 2, 3);
    ɵngcc0.ɵɵtemplate(2, BreadCrumbListComponent_ng_container_0_li_1_span_2_Template, 1, 1, "span", 4);
    ɵngcc0.ɵɵtemplate(3, BreadCrumbListComponent_ng_container_0_li_1_span_3_Template, 1, 1, "span", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext();
    var item_r1 = ctx_r9.$implicit;
    var i_r2 = ctx_r9.index;
    var isFirst_r3 = ctx_r9.first;
    var isLast_r4 = ctx_r9.last;
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("item", item_r1)("index", i_r2)("collapseMode", ctx_r5.collapseMode)("itemTemplate", ctx_r5.itemTemplate);
    ɵngcc0.ɵɵattribute("data-kendo-breadcrumb-index", i_r2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.collapseMode === "wrap" && !isFirst_r3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.collapseMode !== "wrap" && !isLast_r4 && !((item_r1 == null ? null : item_r1.context.collapsed) && (ctx_r5.items[i_r2 + 1] == null ? null : ctx_r5.items[i_r2 + 1].context.collapsed)));
} }
function BreadCrumbListComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BreadCrumbListComponent_ng_container_0_li_1_Template, 4, 7, "li", 1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var isFirst_r3 = ctx.first;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r0.collapseMode === "wrap" && isFirst_r3) || ctx_r0.isRootItemContainer);
} }
var BreadCrumbListComponent = /** @class */ (function () {
    function BreadCrumbListComponent(el, zone) {
        var _this = this;
        this.el = el;
        this.zone = zone;
        this.items = [];
        this.collapseMode = 'auto';
        this.itemClick = new core_1.EventEmitter();
        var element = this.el.nativeElement;
        this.isRootItemContainer = element.classList.contains('k-breadcrumb-root-item-container');
        this.zone.runOutsideAngular(function () {
            var click$ = rxjs_1.fromEvent(element, 'click');
            var enterKey$ = rxjs_1.fromEvent(element, 'keydown').pipe(operators_1.filter(function (ev /* KeyboardEvent causes lint error */) { return ev.keyCode === kendo_angular_common_1.Keys.Enter; }));
            _this.domEventsSubscription = rxjs_1.merge(click$, enterKey$)
                .pipe(operators_1.map(function (ev) { return ev.target; }), operators_1.filter(function (e) { return !e.classList.contains('k-breadcrumb-delimiter-icon'); }), // do not trigger handler when a separator is clicked
            operators_1.map(function (e) { return _this.getItemIndex(e); }), operators_1.filter(util_1.isPresent), operators_1.map(function (i) { return parseInt(i, 10); }), operators_1.map(function (i) { return _this.items[i]; }), operators_1.filter(function (item) { return !item.data.disabled && !item.context.isLast; }), operators_1.map(function (item) { return item.data; }))
                .subscribe(function (el) {
                _this.zone.run(function () { return _this.itemClick.emit(el); });
            });
        });
    }
    BreadCrumbListComponent.prototype.ngOnDestroy = function () {
        this.domEventsSubscription.unsubscribe();
    };
    BreadCrumbListComponent.prototype.getItemIndex = function (target) {
        var item = dom_queries_1.closestItem(target, constants_1.BREADCRUMB_ITEM_INDEX, this.el.nativeElement);
        if (item) {
            return dom_queries_1.itemIndex(item, constants_1.BREADCRUMB_ITEM_INDEX);
        }
    };
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Array)
    ], BreadCrumbListComponent.prototype, "items", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", core_1.TemplateRef)
    ], BreadCrumbListComponent.prototype, "itemTemplate", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], BreadCrumbListComponent.prototype, "collapseMode", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], BreadCrumbListComponent.prototype, "separatorIcon", void 0);
    tslib_1.__decorate([
        core_1.Output(),
        tslib_1.__metadata("design:type", core_1.EventEmitter)
    ], BreadCrumbListComponent.prototype, "itemClick", void 0);
    tslib_1.__decorate([
        core_1.ViewChildren(breadcrumb_item_component_1.BreadCrumbItemComponent, { static: true }),
        tslib_1.__metadata("design:type", core_1.QueryList)
    ], BreadCrumbListComponent.prototype, "renderedItems", void 0);
    BreadCrumbListComponent = tslib_1.__decorate([ tslib_1.__metadata("design:paramtypes", [core_1.ElementRef, core_1.NgZone])
    ], BreadCrumbListComponent);
BreadCrumbListComponent.ɵfac = function BreadCrumbListComponent_Factory(t) { return new (t || BreadCrumbListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
BreadCrumbListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadCrumbListComponent, selectors: [["", "kendoBreadCrumbList", ""]], viewQuery: function BreadCrumbListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(breadcrumb_item_component_1.BreadCrumbItemComponent, 3);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.renderedItems = _t);
    } }, inputs: { items: "items", collapseMode: "collapseMode", itemTemplate: "itemTemplate", separatorIcon: "separatorIcon" }, outputs: { itemClick: "itemClick" }, attrs: _c0, decls: 1, vars: 1, consts: [[4, "ngFor", "ngForOf"], ["kendoBreadCrumbItem", "", 3, "item", "index", "collapseMode", "itemTemplate", 4, "ngIf"], ["kendoBreadCrumbItem", "", 3, "item", "index", "collapseMode", "itemTemplate"], ["renderedItem", ""], ["kendoBreadCrumbSeparator", "", 3, "icon", 4, "ngIf"], ["kendoBreadCrumbSeparator", "", 3, "icon"]], template: function BreadCrumbListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BreadCrumbListComponent_ng_container_0_Template, 2, 1, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc2.BreadCrumbItemComponent, ɵngcc3.BreadCrumbSeparatorDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadCrumbListComponent, [{
        type: core_1.Component,
        args: [{
                selector: '[kendoBreadCrumbList]',
                template: "\n        <ng-container *ngFor=\"let item of items; let i = index; let isFirst = first; let isLast = last\">\n            <li\n                #renderedItem\n                kendoBreadCrumbItem\n                *ngIf=\"!(collapseMode === 'wrap' && isFirst) || isRootItemContainer\"\n                [attr." + constants_1.BREADCRUMB_ITEM_INDEX + "]=\"i\"\n                [item]=\"item\"\n                [index]=\"i\"\n                [collapseMode]=\"collapseMode\"\n                [itemTemplate]=\"itemTemplate\"\n            >\n                <span kendoBreadCrumbSeparator [icon]=\"separatorIcon\" *ngIf=\"collapseMode === 'wrap' && !isFirst\"></span>\n                <span\n                    kendoBreadCrumbSeparator\n                    [icon]=\"separatorIcon\"\n                    *ngIf=\"collapseMode !== 'wrap' && !isLast && !(item?.context.collapsed && items[i + 1]?.context.collapsed)\"\n                ></span>\n            </li>\n        </ng-container>\n    "
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { items: [{
            type: core_1.Input
        }], collapseMode: [{
            type: core_1.Input
        }], itemClick: [{
            type: core_1.Output
        }], itemTemplate: [{
            type: core_1.Input
        }], separatorIcon: [{
            type: core_1.Input
        }], renderedItems: [{
            type: core_1.ViewChildren,
            args: [breadcrumb_item_component_1.BreadCrumbItemComponent, { static: true }]
        }] }); })();
    return BreadCrumbListComponent;
}());
exports.BreadCrumbListComponent = BreadCrumbListComponent;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,