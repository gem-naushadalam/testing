/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ResizeSensorModule } from '@progress/kendo-angular-common';
import { BreadCrumbComponent } from './breadcrumb/breadcrumb.component';
import { BreadCrumbItemComponent } from './breadcrumb/breadcrumb-item.component';
import { BreadCrumbItemTemplateDirective } from './breadcrumb/template-directives/item-template.directive';
import { BreadCrumbSeparatorDirective } from './breadcrumb/template-directives/separator.directive';
import { BreadCrumbListComponent } from './breadcrumb/list.component';
import * as ɵngcc0 from '@angular/core';
const templateDirectives = [
    BreadCrumbItemTemplateDirective
];
const exportedModules = [
    BreadCrumbComponent,
    BreadCrumbItemComponent,
    BreadCrumbListComponent,
    ...templateDirectives
];
const declarations = [
    ...exportedModules,
    BreadCrumbSeparatorDirective
];
/**
 * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})
 * definition for the BreadCrumb component.
 * @example
 *
 * ```ts-no-run
 * // Import the BreadCrumb module
 * import { BreadCrumbModule } from '@progress/kendo-angular-navigation';
 *
 * // The browser platform with a compiler
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { BrowserModule } from '@angular/platform-browser';
 *
 * import { NgModule } from '@angular/core';
 *
 * // Import the app component
 * import { AppComponent } from './app.component';
 *
 * // Define the app module
 * _@NgModule({
 *     declarations: [AppComponent], // declare app component
 *     imports:      [BrowserModule, BreadCrumbModule], // import BreadCrumb module
 *     bootstrap:    [AppComponent]
 * })
 * export class AppModule {}
 *
 * // Compile and launch the module
 * platformBrowserDynamic().bootstrapModule(AppModule);
 *
 * ```
 */
let BreadCrumbModule = class BreadCrumbModule {
};
BreadCrumbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BreadCrumbModule });
BreadCrumbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BreadCrumbModule_Factory(t) { return new (t || BreadCrumbModule)(); }, imports: [[CommonModule, ResizeSensorModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BreadCrumbModule, { declarations: function () { return [BreadCrumbComponent,
        BreadCrumbItemComponent,
        BreadCrumbListComponent, BreadCrumbItemTemplateDirective, BreadCrumbSeparatorDirective]; }, imports: function () { return [CommonModule, ResizeSensorModule]; }, exports: function () { return [BreadCrumbComponent,
        BreadCrumbItemComponent,
        BreadCrumbListComponent, BreadCrumbItemTemplateDirective]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadCrumbModule, [{
        type: NgModule,
        args: [{
                declarations: [declarations],
                exports: [exportedModules],
                imports: [CommonModule, ResizeSensorModule]
            }]
    }], null, null); })();
export { BreadCrumbModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi5tb2R1bGUuanMiLCJzb3VyY2VzIjpbImJyZWFkY3J1bWIubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7MEJBT3FCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUmVzaXplU2Vuc29yTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItY29tbW9uJztcbmltcG9ydCB7IEJyZWFkQ3J1bWJDb21wb25lbnQgfSBmcm9tICcuL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi5jb21wb25lbnQnO1xuaW1wb3J0IHsgQnJlYWRDcnVtYkl0ZW1Db21wb25lbnQgfSBmcm9tICcuL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCcmVhZENydW1iSXRlbVRlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSAnLi9icmVhZGNydW1iL3RlbXBsYXRlLWRpcmVjdGl2ZXMvaXRlbS10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQnJlYWRDcnVtYlNlcGFyYXRvckRpcmVjdGl2ZSB9IGZyb20gJy4vYnJlYWRjcnVtYi90ZW1wbGF0ZS1kaXJlY3RpdmVzL3NlcGFyYXRvci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQnJlYWRDcnVtYkxpc3RDb21wb25lbnQgfSBmcm9tICcuL2JyZWFkY3J1bWIvbGlzdC5jb21wb25lbnQnO1xuY29uc3QgdGVtcGxhdGVEaXJlY3RpdmVzID0gW1xuICAgIEJyZWFkQ3J1bWJJdGVtVGVtcGxhdGVEaXJlY3RpdmVcbl07XG5jb25zdCBleHBvcnRlZE1vZHVsZXMgPSBbXG4gICAgQnJlYWRDcnVtYkNvbXBvbmVudCxcbiAgICBCcmVhZENydW1iSXRlbUNvbXBvbmVudCxcbiAgICBCcmVhZENydW1iTGlzdENvbXBvbmVudCxcbiAgICAuLi50ZW1wbGF0ZURpcmVjdGl2ZXNcbl07XG5jb25zdCBkZWNsYXJhdGlvbnMgPSBbXG4gICAgLi4uZXhwb3J0ZWRNb2R1bGVzLFxuICAgIEJyZWFkQ3J1bWJTZXBhcmF0b3JEaXJlY3RpdmVcbl07XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIFtOZ01vZHVsZV0oe3sgc2l0ZS5kYXRhLnVybHMuYW5ndWxhclsnbmdtb2R1bGVhcGknXSB9fSlcbiAqIGRlZmluaXRpb24gZm9yIHRoZSBCcmVhZENydW1iIGNvbXBvbmVudC5cbiAqIEBleGFtcGxlXG4gKlxuICogYGBgdHMtbm8tcnVuXG4gKiAvLyBJbXBvcnQgdGhlIEJyZWFkQ3J1bWIgbW9kdWxlXG4gKiBpbXBvcnQgeyBCcmVhZENydW1iTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbmF2aWdhdGlvbic7XG4gKlxuICogLy8gVGhlIGJyb3dzZXIgcGxhdGZvcm0gd2l0aCBhIGNvbXBpbGVyXG4gKiBpbXBvcnQgeyBwbGF0Zm9ybUJyb3dzZXJEeW5hbWljIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci1keW5hbWljJztcbiAqIGltcG9ydCB7IEJyb3dzZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbiAqXG4gKiBpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuICpcbiAqIC8vIEltcG9ydCB0aGUgYXBwIGNvbXBvbmVudFxuICogaW1wb3J0IHsgQXBwQ29tcG9uZW50IH0gZnJvbSAnLi9hcHAuY29tcG9uZW50JztcbiAqXG4gKiAvLyBEZWZpbmUgdGhlIGFwcCBtb2R1bGVcbiAqIF9ATmdNb2R1bGUoe1xuICogICAgIGRlY2xhcmF0aW9uczogW0FwcENvbXBvbmVudF0sIC8vIGRlY2xhcmUgYXBwIGNvbXBvbmVudFxuICogICAgIGltcG9ydHM6ICAgICAgW0Jyb3dzZXJNb2R1bGUsIEJyZWFkQ3J1bWJNb2R1bGVdLCAvLyBpbXBvcnQgQnJlYWRDcnVtYiBtb2R1bGVcbiAqICAgICBib290c3RyYXA6ICAgIFtBcHBDb21wb25lbnRdXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIEFwcE1vZHVsZSB7fVxuICpcbiAqIC8vIENvbXBpbGUgYW5kIGxhdW5jaCB0aGUgbW9kdWxlXG4gKiBwbGF0Zm9ybUJyb3dzZXJEeW5hbWljKCkuYm9vdHN0cmFwTW9kdWxlKEFwcE1vZHVsZSk7XG4gKlxuICogYGBgXG4gKi9cbmxldCBCcmVhZENydW1iTW9kdWxlID0gY2xhc3MgQnJlYWRDcnVtYk1vZHVsZSB7XG59O1xuQnJlYWRDcnVtYk1vZHVsZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBkZWNsYXJhdGlvbnM6IFtkZWNsYXJhdGlvbnNdLFxuICAgICAgICBleHBvcnRzOiBbZXhwb3J0ZWRNb2R1bGVzXSxcbiAgICAgICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgUmVzaXplU2Vuc29yTW9kdWxlXVxuICAgIH0pXG5dLCBCcmVhZENydW1iTW9kdWxlKTtcbmV4cG9ydCB7IEJyZWFkQ3J1bWJNb2R1bGUgfTtcbiJdfQ==