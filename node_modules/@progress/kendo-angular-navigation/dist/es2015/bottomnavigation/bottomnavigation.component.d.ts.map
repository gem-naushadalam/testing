{"version":3,"file":"bottomnavigation.component.d.ts","sources":["bottomnavigation.component.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { BottomNavigationSelectEvent } from './events/select-event';\nimport { BottomNavigationItemFlow } from './types/bottomnavigation-item-flow';\nimport { BottomNavigationFill } from './types/bottomnavigation-fill';\nimport { EventEmitter, ElementRef, Renderer2, NgZone, ChangeDetectorRef, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { BottomNavigationPositionMode } from './types/bottomnavigation-position-mode';\nimport { BottomNavigationThemeColor } from './types/bottomnavigation-theme-color';\nimport { BottomNavigationItemTemplateDirective } from './templates/item-template.directive';\n/**\n * Represents the [Kendo UI BottomNavigation component for Angular]({% slug overview_bottomnavigation %}).\n *\n * @example\n * ```ts-no-run\n * _@Component({\n *      selector: 'my-app',\n *      template: `\n *          <kendo-bottomnavigation [items]=\"items\"></kendo-bottomnavigation>\n *      `\n * })\n * class AppComponent {\n *      public items: Array<any> = [\n *          { text: 'Inbox', icon: 'email', selected: true },\n *          { text: 'Calendar', icon: 'calendar'},\n *          { text: 'Profile', icon: 'user'}\n *      ]\n * }\n * ```\n */\nexport declare class BottomNavigationComponent implements OnInit, AfterViewInit, OnDestroy {\n    private localization;\n    private hostElement;\n    private ngZone;\n    private changeDetector;\n    private renderer;\n    /**\n     * The collection of items that will be rendered in the BottomNavigation ([see example]({% slug items_bottomnavigation %})).\n     */\n    items: any[];\n    /**\n     * Sets a top border to the BottomNavigation ([see example]({% slug appearance_bottomnavigation %})).\n     *\n     * @default false\n     */\n    border: boolean;\n    /**\n     * Disables the whole BottomNavigation.\n     *\n     * @default false\n     */\n    disabled: boolean;\n    /**\n     * The fill style of the BottomNavigation ([see example]({% slug appearance_bottomnavigation %})).\n     *\n     * * The possible values are:\n     * * (Default) `flat`\n     * * `solid`\n     */\n    fill: BottomNavigationFill;\n    /**\n     * Specifies how the icon and text label are positioned in the BottomNavigation items ([see example]({% slug items_bottomnavigation %}#toc-itemflow)).\n     *\n     * The possible values are:\n     * * (Default) `vertical` - Renders the text below the icon.\n     * * `horizontal` - Renders the icon and the text on the same line.\n     */\n    itemFlow: BottomNavigationItemFlow;\n    /**\n     * Specifies the position and behavior of the BottomNavigation when the page is scrollable ([see example]({% slug positioning_bottomnavigation %})).\n     *\n     * The possible values are:\n     * * (Default) `fixed` - The BottomNavigation always stays at the bottom of the viewport, regardless of the page scroll position.\n     * * `sticky` - Positions the BottomNavigation at the end of the scrollable container.\n     */\n    positionMode: BottomNavigationPositionMode;\n    /**\n     * Specifies the theme color of the BottomNavigation ([see example]({% slug appearance_bottomnavigation %})).\n     *\n     * * The possible values are:\n     * * (Default) `primary` - Applies coloring based on the primary theme color.\n     * * `secondary` - Applies coloring based on the secondary theme color.\n     * * `tertiary` - Applies coloring based on the tertiary theme color.\n     * * `info` - Applies coloring based on the info theme color.\n     * * `success` - Applies coloring based on the success theme color.\n     * * `warning` - Applies coloring based on the warning theme color.\n     * * `error` - Applies coloring based on the error theme color.\n     * * `dark` - Applies coloring based on the dark theme color.\n     * * `light` - Applies coloring based on the light theme color.\n     * * `inverse` - Applies coloring based on the inverted theme color.\n     */\n    themeColor: BottomNavigationThemeColor;\n    /**\n     * Fires each time an item is selected. This event is preventable.\n     */\n    select: EventEmitter<BottomNavigationSelectEvent>;\n    /**\n     * @hidden\n     */\n    hostClass: boolean;\n    /**\n     * @hidden\n     */\n    readonly borderClass: boolean;\n    /**\n     * @hidden\n     */\n    readonly disabledClass: boolean;\n    /**\n     * @hidden\n     */\n    role: string;\n    /**\n     * @hidden\n     */\n    direction: string;\n    /**\n     * @hidden\n     */\n    itemTemplate: BottomNavigationItemTemplateDirective;\n    /**\n     * @hidden\n     */\n    selectedIdx: number;\n    private _fill;\n    private _itemFlow;\n    private _positionMode;\n    private _themeColor;\n    private _nativeHostElement;\n    private dynamicRTLSubscription;\n    private subscriptions;\n    private rtl;\n    constructor(localization: LocalizationService, hostElement: ElementRef, ngZone: NgZone, changeDetector: ChangeDetectorRef, renderer: Renderer2);\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngAfterViewInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    selectItem(idx: number, args: any): void;\n    private applyClasses;\n    private initDomEvents;\n    private clickHandler;\n    private keyDownHandler;\n    private getBottomNavigationItemIndex;\n}\n"]}