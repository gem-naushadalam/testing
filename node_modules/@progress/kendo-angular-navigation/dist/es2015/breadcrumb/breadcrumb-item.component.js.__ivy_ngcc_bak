/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Component, Input, ElementRef, TemplateRef, HostBinding } from '@angular/core';
import { isDocumentAvailable } from '@progress/kendo-angular-common';
import { outerWidth } from '../common/util';
/**
 * @hidden
 */
let BreadCrumbItemComponent = class BreadCrumbItemComponent {
    constructor(el) {
        this.el = el;
        this.index = -1;
        this.hostClasses = true;
        this.disabled = false;
    }
    get isRootItem() {
        return this.item.context.isFirst;
    }
    get isDisabled() {
        return this.disabled || null;
    }
    get isLastItem() {
        return this.item.context.isLast;
    }
    ngOnInit() {
        this.disabled = this.item.data && (this.item.data.disabled || this.item.context.isLast);
    }
    ngAfterViewInit() {
        if (isDocumentAvailable()) {
            this.width = outerWidth(this.el.nativeElement);
        }
    }
    onImageLoad() {
        if (isDocumentAvailable()) {
            this.width = outerWidth(this.el.nativeElement);
        }
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], BreadCrumbItemComponent.prototype, "item", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], BreadCrumbItemComponent.prototype, "collapseMode", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number)
], BreadCrumbItemComponent.prototype, "index", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", TemplateRef)
], BreadCrumbItemComponent.prototype, "itemTemplate", void 0);
tslib_1.__decorate([
    HostBinding('class.k-flex-none'),
    HostBinding('class.k-breadcrumb-item'),
    tslib_1.__metadata("design:type", Boolean)
], BreadCrumbItemComponent.prototype, "hostClasses", void 0);
tslib_1.__decorate([
    HostBinding('class.k-breadcrumb-root-item'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], BreadCrumbItemComponent.prototype, "isRootItem", null);
tslib_1.__decorate([
    HostBinding('attr.aria-disabled'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], BreadCrumbItemComponent.prototype, "isDisabled", null);
tslib_1.__decorate([
    HostBinding('class.k-breadcrumb-last-item'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], BreadCrumbItemComponent.prototype, "isLastItem", null);
BreadCrumbItemComponent = tslib_1.__decorate([
    Component({
        selector: '[kendoBreadCrumbItem]',
        template: `
        <ng-template #separator>
            <ng-content select="[kendoBreadCrumbSeparator]"></ng-content>
        </ng-template>

        <ng-container *ngIf="collapseMode === 'wrap'">
            <ng-container *ngTemplateOutlet="separator"></ng-container>
        </ng-container>

        <ng-container *ngIf="!item.context.collapsed">
            <span
                *ngIf="!itemTemplate"
                [ngClass]="{
                    'k-breadcrumb-root-link': item.context.isFirst,
                    'k-breadcrumb-link': index !== 0,
                    'k-breadcrumb-icontext-link': !!item.data.icon && !!item.data.text,
                    'k-breadcrumb-icon-link': !!item.data.icon && !item.data.text,
                    'k-state-disabled': disabled
                }"
                [title]="item.data.title || ''"
                [tabindex]="disabled ? -1 : 0"
                [attr.aria-current]="item.context.isLast ? true : null"
                role="link"
                class="k-cursor-pointer k-flex-none"
            >
                <img *ngIf="item.data.imageUrl" (load)="onImageLoad()" [src]="item.data.imageUrl" class="k-image" role="presentation" />
                <span *ngIf="item.data.icon && !item.data.iconClass" class="k-icon k-i-{{ item.data.icon }}"></span>
                <span *ngIf="item.data.iconClass" class="{{ item.data.iconClass }}"></span>
                {{ item.data.text }}
            </span>
            <ng-template
                *ngIf="itemTemplate"
                [ngTemplateOutlet]="itemTemplate"
                [ngTemplateOutletContext]="{
                    $implicit: item.data,
                    index: index
                }"
            ></ng-template>
        </ng-container>

        <ng-container *ngIf="collapseMode !== 'wrap'">
            <ng-container *ngTemplateOutlet="separator"></ng-container>
        </ng-container>
    `
    }),
    tslib_1.__metadata("design:paramtypes", [ElementRef])
], BreadCrumbItemComponent);
export { BreadCrumbItemComponent };
