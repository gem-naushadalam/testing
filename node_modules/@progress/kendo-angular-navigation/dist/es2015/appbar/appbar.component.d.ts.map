{"version":3,"file":"appbar.component.d.ts","sources":["appbar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { OnDestroy } from '@angular/core';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { AppBarPosition } from './models/position';\nimport { AppBarThemeColor } from './models/theme-color';\nimport { AppBarPositionMode } from './models/position-mode';\n/**\n * Represents the [Kendo UI AppBar component for Angular]({% slug overview_appbar %}).\n * Used to display information, actions, branding titles and additional navigation on the current screen.\n */\nexport declare class AppBarComponent implements OnDestroy {\n    private localizationService;\n    hostClass: boolean;\n    readonly topClass: boolean;\n    readonly bottomClass: boolean;\n    readonly stickyClass: boolean;\n    readonly fixedClass: boolean;\n    readonly staticClass: boolean;\n    readonly lightClass: boolean;\n    readonly darkClass: boolean;\n    readonly inheritClass: boolean;\n    /**\n     * @hidden\n     */\n    direction: string;\n    /**\n     * Specifies the position of the AppBar\n     * ([see example]({% slug positioning_appbar %}#toc-position)).\n     *\n     * * The possible values are:\n     * * `top` (Default)&mdash;Positions the AppBar at the top of the content.\n     *    Setting the `position` property to `top` requires adding the Appbar component before the page content.\n     *    The position property applies CSS `top: 0` style in [`fixed mode`]({% slug api_navigation_appbarcomponent %}#toc-positionMode) and also adds a `box-shadow` to the bottom of the AppBar.\n     *\n     * * `bottom`&mdash;Positions the AppBar at the bottom of the content.\n     *    Setting the `position` property to `bottom` requires adding the Appbar component after the page content.\n     *   The position property applies CSS `bottom: 0` style in [`fixed mode`]({% slug api_navigation_appbarcomponent %}#toc-positionMode) and also adds a `box-shadow ` to the top of the AppBar.\n     *\n     */\n    position: AppBarPosition;\n    /**\n     * Specifies the positionMode of the AppBar\n     * ([see example]({% slug positioning_appbar %}#toc-positionmode)).\n     *\n     * * The possible values are:\n     * * `static` (Default)&mdash;Does not position the AppBar in any special way. It is positioned according to the normal flow of the page.\n     * * `sticky`&mdash;Positions the AppBar based on the user's scroll position. A sticky element toggles between static and fixed CSS [`position`](https://developer.mozilla.org/en-US/docs/Web/CSS/position) property, depending on the scroll position.\n     * * `fixed`&mdash;Positions the AppBar relative to the viewport. It always stays in the same place even if the page is scrolled.\n     */\n    positionMode: AppBarPositionMode;\n    /**\n     * Specifies the theme color of the AppBar.\n     * The theme color will be applied as background color of the component.\n     *\n     *\n     * * The possible values are:\n     * * `light` (Default)&mdash;Applies coloring based on light theme color.\n     * * `dark`&mdash;Applies coloring based on dark theme color.\n     * * `inherit`&mdash; Applies inherited coloring value.\n     *\n     */\n    themeColor: AppBarThemeColor;\n    private dynamicRTLSubscription;\n    private rtl;\n    constructor(localizationService: LocalizationService);\n    ngOnDestroy(): void;\n}\n"]}