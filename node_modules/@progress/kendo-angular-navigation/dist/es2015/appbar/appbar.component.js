/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Component, HostBinding, Input } from '@angular/core';
import { LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';
import { validatePackage } from '@progress/kendo-licensing';
import { packageMetadata } from '../package-metadata';
/**
 * Represents the [Kendo UI AppBar component for Angular]({% slug overview_appbar %}).
 * Used to display information, actions, branding titles and additional navigation on the current screen.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@progress/kendo-angular-l10n';

const _c0 = ["*"];
let AppBarComponent = class AppBarComponent {
    constructor(localizationService) {
        this.localizationService = localizationService;
        this.hostClass = true;
        /**
         * Specifies the position of the AppBar
         * ([see example]({% slug positioning_appbar %}#toc-position)).
         *
         * * The possible values are:
         * * `top` (Default)&mdash;Positions the AppBar at the top of the content.
         *    Setting the `position` property to `top` requires adding the Appbar component before the page content.
         *    The position property applies CSS `top: 0` style in [`fixed mode`]({% slug api_navigation_appbarcomponent %}#toc-positionMode) and also adds a `box-shadow` to the bottom of the AppBar.
         *
         * * `bottom`&mdash;Positions the AppBar at the bottom of the content.
         *    Setting the `position` property to `bottom` requires adding the Appbar component after the page content.
         *   The position property applies CSS `bottom: 0` style in [`fixed mode`]({% slug api_navigation_appbarcomponent %}#toc-positionMode) and also adds a `box-shadow ` to the top of the AppBar.
         *
         */
        this.position = 'top';
        /**
         * Specifies the positionMode of the AppBar
         * ([see example]({% slug positioning_appbar %}#toc-positionmode)).
         *
         * * The possible values are:
         * * `static` (Default)&mdash;Does not position the AppBar in any special way. It is positioned according to the normal flow of the page.
         * * `sticky`&mdash;Positions the AppBar based on the user's scroll position. A sticky element toggles between static and fixed CSS [`position`](https://developer.mozilla.org/en-US/docs/Web/CSS/position) property, depending on the scroll position.
         * * `fixed`&mdash;Positions the AppBar relative to the viewport. It always stays in the same place even if the page is scrolled.
         */
        this.positionMode = 'static';
        /**
         * Specifies the theme color of the AppBar.
         * The theme color will be applied as background color of the component.
         *
         *
         * * The possible values are:
         * * `light` (Default)&mdash;Applies coloring based on light theme color.
         * * `dark`&mdash;Applies coloring based on dark theme color.
         * * `inherit`&mdash; Applies inherited coloring value.
         *
         */
        this.themeColor = 'light';
        this.rtl = false;
        validatePackage(packageMetadata);
        this.dynamicRTLSubscription = this.localizationService.changes.subscribe(({ rtl }) => {
            this.rtl = rtl;
            this.direction = this.rtl ? 'rtl' : 'ltr';
        });
    }
    get topClass() {
        return this.position === 'top';
    }
    get bottomClass() {
        return this.position === 'bottom';
    }
    get stickyClass() {
        return this.positionMode === 'sticky';
    }
    get fixedClass() {
        return this.positionMode === 'fixed';
    }
    get staticClass() {
        return this.positionMode === 'static';
    }
    get lightClass() {
        return this.themeColor === 'light';
    }
    get darkClass() {
        return this.themeColor === 'dark';
    }
    get inheritClass() {
        return this.themeColor === 'inherit';
    }
    ngOnDestroy() {
        if (this.dynamicRTLSubscription) {
            this.dynamicRTLSubscription.unsubscribe();
        }
    }
};
AppBarComponent.ɵfac = function AppBarComponent_Factory(t) { return new (t || AppBarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService)); };
AppBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AppBarComponent, selectors: [["kendo-appbar"]], hostVars: 19, hostBindings: function AppBarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("dir", ctx.direction);
        ɵngcc0.ɵɵclassProp("k-appbar", ctx.hostClass)("k-appbar-top", ctx.topClass)("k-appbar-bottom", ctx.bottomClass)("k-appbar-sticky", ctx.stickyClass)("k-appbar-fixed", ctx.fixedClass)("k-appbar-static", ctx.staticClass)("k-appbar-light", ctx.lightClass)("k-appbar-dark", ctx.darkClass)("k-appbar-inherit", ctx.inheritClass);
    } }, inputs: { position: "position", positionMode: "positionMode", themeColor: "themeColor" }, exportAs: ["kendoAppBar"], features: [ɵngcc0.ɵɵProvidersFeature([
            LocalizationService,
            {
                provide: L10N_PREFIX,
                useValue: 'kendo.appbar.component'
            }
        ])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function AppBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
tslib_1.__decorate([
    HostBinding('class.k-appbar'),
    tslib_1.__metadata("design:type", Boolean)
], AppBarComponent.prototype, "hostClass", void 0);
tslib_1.__decorate([
    HostBinding('class.k-appbar-top'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], AppBarComponent.prototype, "topClass", null);
tslib_1.__decorate([
    HostBinding('class.k-appbar-bottom'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], AppBarComponent.prototype, "bottomClass", null);
tslib_1.__decorate([
    HostBinding('class.k-appbar-sticky'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], AppBarComponent.prototype, "stickyClass", null);
tslib_1.__decorate([
    HostBinding('class.k-appbar-fixed'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], AppBarComponent.prototype, "fixedClass", null);
tslib_1.__decorate([
    HostBinding('class.k-appbar-static'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], AppBarComponent.prototype, "staticClass", null);
tslib_1.__decorate([
    HostBinding('class.k-appbar-light'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], AppBarComponent.prototype, "lightClass", null);
tslib_1.__decorate([
    HostBinding('class.k-appbar-dark'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], AppBarComponent.prototype, "darkClass", null);
tslib_1.__decorate([
    HostBinding('class.k-appbar-inherit'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], AppBarComponent.prototype, "inheritClass", null);
tslib_1.__decorate([
    HostBinding('attr.dir'),
    tslib_1.__metadata("design:type", String)
], AppBarComponent.prototype, "direction", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], AppBarComponent.prototype, "position", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], AppBarComponent.prototype, "positionMode", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], AppBarComponent.prototype, "themeColor", void 0);
AppBarComponent = tslib_1.__decorate([ tslib_1.__metadata("design:paramtypes", [LocalizationService])
], AppBarComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppBarComponent, [{
        type: Component,
        args: [{
                exportAs: 'kendoAppBar',
                selector: 'kendo-appbar',
                template: `
        <ng-content></ng-content>
    `,
                providers: [
                    LocalizationService,
                    {
                        provide: L10N_PREFIX,
                        useValue: 'kendo.appbar.component'
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.LocalizationService }]; }, { hostClass: [{
            type: HostBinding,
            args: ['class.k-appbar']
        }], position: [{
            type: Input
        }], positionMode: [{
            type: Input
        }], themeColor: [{
            type: Input
        }], direction: [{
            type: HostBinding,
            args: ['attr.dir']
        }], topClass: [{
            type: HostBinding,
            args: ['class.k-appbar-top']
        }], bottomClass: [{
            type: HostBinding,
            args: ['class.k-appbar-bottom']
        }], stickyClass: [{
            type: HostBinding,
            args: ['class.k-appbar-sticky']
        }], fixedClass: [{
            type: HostBinding,
            args: ['class.k-appbar-fixed']
        }], staticClass: [{
            type: HostBinding,
            args: ['class.k-appbar-static']
        }], lightClass: [{
            type: HostBinding,
            args: ['class.k-appbar-light']
        }], darkClass: [{
            type: HostBinding,
            args: ['class.k-appbar-dark']
        }], inheritClass: [{
            type: HostBinding,
            args: ['class.k-appbar-inherit']
        }] }); })();
export { AppBarComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,