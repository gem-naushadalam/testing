/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Component, HostBinding, Input, Renderer2, ElementRef } from '@angular/core';
import { isPresent } from '../common/util';
/**
 * Represents the [Kendo UI AppBarSpacer component for Angular]({% slug contentarrangement_appbar %}#toc-spacings).
 * Used to give additional white space between the AppBar sections and provides a way for customizing its width.
 *
 * @example
 *
 * ```ts-no-run
 *  * _@Component({
 *    selector: 'my-app',
 *    template: `
 *        <kendo-appbar>
 *            <kendo-appbar-section>
 *                 <button class="k-button k-button-clear">
 *                     <kendo-icon [name]="'menu'"></kendo-icon>
 *                 </button>
 *            </kendo-appbar-section>
 *
 *            <kendo-appbar-spacer></kendo-appbar-spacer>
 *
 *            <kendo-appbar-section>
 *                <h2>Page Title</h2>
 *            </kendo-appbar-section>
 *        </kendo-appbar>
 *    `
 * })
 * class AppComponent {}
 * ```
 */
let AppBarSpacerComponent = class AppBarSpacerComponent {
    constructor(renderer, element) {
        this.renderer = renderer;
        this.element = element;
        this.hostClass = true;
    }
    get sizedClass() {
        return isPresent(this.width);
    }
    ngAfterViewInit() {
        if (isPresent(this.width)) {
            const element = this.element.nativeElement;
            this.renderer.setStyle(element, 'flexBasis', this.width);
        }
    }
};
tslib_1.__decorate([
    HostBinding('class.k-appbar-spacer'),
    tslib_1.__metadata("design:type", Boolean)
], AppBarSpacerComponent.prototype, "hostClass", void 0);
tslib_1.__decorate([
    HostBinding('class.k-appbar-spacer-sized'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], AppBarSpacerComponent.prototype, "sizedClass", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], AppBarSpacerComponent.prototype, "width", void 0);
AppBarSpacerComponent = tslib_1.__decorate([
    Component({
        selector: 'kendo-appbar-spacer',
        template: ``
    }),
    tslib_1.__metadata("design:paramtypes", [Renderer2, ElementRef])
], AppBarSpacerComponent);
export { AppBarSpacerComponent };
