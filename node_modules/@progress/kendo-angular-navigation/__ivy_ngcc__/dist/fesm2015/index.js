/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { __decorate, __metadata, __param } from 'tslib';
import { HostBinding, Input, Component, Renderer2, ElementRef, NgModule, Directive, Optional, TemplateRef, EventEmitter, Output, ViewChildren, QueryList, NgZone, isDevMode, ViewChild, ContentChild, ChangeDetectorRef } from '@angular/core';
import { LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';
import { validatePackage } from '@progress/kendo-licensing';
import { CommonModule } from '@angular/common';
import { isDocumentAvailable, Keys, ResizeSensorComponent, ResizeSensorModule } from '@progress/kendo-angular-common';
import { fromEvent, merge, ReplaySubject, Subject, Subscription } from 'rxjs';
import { filter, map, startWith, share } from 'rxjs/operators';

/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@progress/kendo-angular-l10n';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@progress/kendo-angular-common';

const _c0 = ["*"];
const _c1 = ["kendoBreadCrumbItem", ""];
function BreadCrumbItemComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function BreadCrumbItemComponent_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function BreadCrumbItemComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BreadCrumbItemComponent_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function BreadCrumbItemComponent_ng_container_3_span_1_img_1_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "img", 7);
    ɵngcc0.ɵɵlistener("load", function BreadCrumbItemComponent_ng_container_3_span_1_img_1_Template_img_load_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(3); return ctx_r11.onImageLoad(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("src", ctx_r8.item.data.imageUrl, ɵngcc0.ɵɵsanitizeUrl);
} }
function BreadCrumbItemComponent_ng_container_3_span_1_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span");
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("k-icon k-i-", ctx_r9.item.data.icon, "");
} }
function BreadCrumbItemComponent_ng_container_3_span_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span");
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMap(ctx_r10.item.data.iconClass);
} }
const _c2 = function (a0, a1, a2, a3, a4) { return { "k-breadcrumb-root-link": a0, "k-breadcrumb-link": a1, "k-breadcrumb-icontext-link": a2, "k-breadcrumb-icon-link": a3, "k-state-disabled": a4 }; };
function BreadCrumbItemComponent_ng_container_3_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 4);
    ɵngcc0.ɵɵtemplate(1, BreadCrumbItemComponent_ng_container_3_span_1_img_1_Template, 1, 1, "img", 5);
    ɵngcc0.ɵɵtemplate(2, BreadCrumbItemComponent_ng_container_3_span_1_span_2_Template, 1, 3, "span", 6);
    ɵngcc0.ɵɵtemplate(3, BreadCrumbItemComponent_ng_container_3_span_1_span_3_Template, 1, 3, "span", 6);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction5(8, _c2, ctx_r6.item.context.isFirst, ctx_r6.index !== 0, !!ctx_r6.item.data.icon && !!ctx_r6.item.data.text, !!ctx_r6.item.data.icon && !ctx_r6.item.data.text, ctx_r6.disabled))("title", ctx_r6.item.data.title || "")("tabindex", ctx_r6.disabled ? -1 : 0);
    ɵngcc0.ɵɵattribute("aria-current", ctx_r6.item.context.isLast ? true : null);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.item.data.imageUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.item.data.icon && !ctx_r6.item.data.iconClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.item.data.iconClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r6.item.data.text, " ");
} }
function BreadCrumbItemComponent_ng_container_3_2_ng_template_0_Template(rf, ctx) { }
const _c3 = function (a0, a1) { return { $implicit: a0, index: a1 }; };
function BreadCrumbItemComponent_ng_container_3_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, BreadCrumbItemComponent_ng_container_3_2_ng_template_0_Template, 0, 0, "ng-template", 8);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r7.itemTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c3, ctx_r7.item.data, ctx_r7.index));
} }
function BreadCrumbItemComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BreadCrumbItemComponent_ng_container_3_span_1_Template, 5, 14, "span", 3);
    ɵngcc0.ɵɵtemplate(2, BreadCrumbItemComponent_ng_container_3_2_Template, 1, 5, undefined, 1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.itemTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.itemTemplate);
} }
function BreadCrumbItemComponent_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function BreadCrumbItemComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BreadCrumbItemComponent_ng_container_4_ng_container_1_Template, 1, 0, "ng-container", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
const _c4 = [[["", "kendoBreadCrumbSeparator", ""]]];
const _c5 = ["[kendoBreadCrumbSeparator]"];
const _c6 = ["kendoBreadCrumbList", ""];
function BreadCrumbListComponent_ng_container_0_li_1_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 5);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("icon", ctx_r7.separatorIcon);
} }
function BreadCrumbListComponent_ng_container_0_li_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 5);
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("icon", ctx_r8.separatorIcon);
} }
function BreadCrumbListComponent_ng_container_0_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 2, 3);
    ɵngcc0.ɵɵtemplate(2, BreadCrumbListComponent_ng_container_0_li_1_span_2_Template, 1, 1, "span", 4);
    ɵngcc0.ɵɵtemplate(3, BreadCrumbListComponent_ng_container_0_li_1_span_3_Template, 1, 1, "span", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    const item_r1 = ctx_r9.$implicit;
    const i_r2 = ctx_r9.index;
    const isFirst_r3 = ctx_r9.first;
    const isLast_r4 = ctx_r9.last;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("item", item_r1)("index", i_r2)("collapseMode", ctx_r5.collapseMode)("itemTemplate", ctx_r5.itemTemplate);
    ɵngcc0.ɵɵattribute("data-kendo-breadcrumb-index", i_r2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.collapseMode === "wrap" && !isFirst_r3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.collapseMode !== "wrap" && !isLast_r4 && !((item_r1 == null ? null : item_r1.context.collapsed) && (ctx_r5.items[i_r2 + 1] == null ? null : ctx_r5.items[i_r2 + 1].context.collapsed)));
} }
function BreadCrumbListComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BreadCrumbListComponent_ng_container_0_li_1_Template, 4, 7, "li", 1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const isFirst_r3 = ctx.first;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r0.collapseMode === "wrap" && isFirst_r3) || ctx_r0.isRootItemContainer);
} }
const _c7 = ["resizeSensor"];
const _c8 = ["itemsContainer"];
function BreadCrumbComponent_ol_0_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ol", 5, 2);
    ɵngcc0.ɵɵlistener("itemClick", function BreadCrumbComponent_ol_0_Template_ol_itemClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.itemClick.emit($event); });
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("items", ɵngcc0.ɵɵpipeBind1(2, 4, ctx_r0.firstItem$))("itemTemplate", ctx_r0.itemTemplate == null ? null : ctx_r0.itemTemplate.templateRef)("collapseMode", ctx_r0.collapseMode)("separatorIcon", ctx_r0.separatorIcon);
} }
const _c9 = function (a0, a1) { return { "k-flex-wrap": a0, "k-flex-none": a1 }; };
const _c10 = ["kendoBottomNavigationItem", ""];
function BottomNavigationItemComponent_ng_container_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 3);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.iconClasses);
} }
function BottomNavigationItemComponent_ng_container_0_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.item.text);
} }
function BottomNavigationItemComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BottomNavigationItemComponent_ng_container_0_span_1_Template, 1, 1, "span", 1);
    ɵngcc0.ɵɵtemplate(2, BottomNavigationItemComponent_ng_container_0_span_2_Template, 2, 1, "span", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.itemIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.item.text);
} }
function BottomNavigationItemComponent_1_ng_template_0_Template(rf, ctx) { }
const _c11 = function (a0) { return { $implicit: a0 }; };
function BottomNavigationItemComponent_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, BottomNavigationItemComponent_1_ng_template_0_Template, 0, 0, "ng-template", 5);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.itemTemplate == null ? null : ctx_r1.itemTemplate.templateRef)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c11, ctx_r1.item));
} }
function BottomNavigationComponent_ng_container_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 2);
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const idx_r3 = ctx.index;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("disabledComponent", ctx_r1.disabled)("item", item_r2)("index", idx_r3)("selectedIdx", ctx_r1.selectedIdx)("itemTemplate", ctx_r1.itemTemplate)("ngClass", item_r2.cssClass)("ngStyle", item_r2.cssStyle);
    ɵngcc0.ɵɵattribute("data-kendo-bottomnavigation-index", idx_r3);
} }
function BottomNavigationComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BottomNavigationComponent_ng_container_0_span_1_Template, 1, 8, "span", 1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.items);
} }
const packageMetadata = {
    name: '@progress/kendo-angular-navigation',
    productName: 'Kendo UI for Angular',
    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],
    publishDate: 1620632789,
    version: '',
    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'
};

/**
 * Represents the [Kendo UI AppBar component for Angular]({% slug overview_appbar %}).
 * Used to display information, actions, branding titles and additional navigation on the current screen.
 */
let AppBarComponent = class AppBarComponent {
    constructor(localizationService) {
        this.localizationService = localizationService;
        this.hostClass = true;
        /**
         * Specifies the position of the AppBar
         * ([see example]({% slug positioning_appbar %}#toc-position)).
         *
         * * The possible values are:
         * * `top` (Default)&mdash;Positions the AppBar at the top of the content.
         *    Setting the `position` property to `top` requires adding the Appbar component before the page content.
         *    The position property applies CSS `top: 0` style in [`fixed mode`]({% slug api_navigation_appbarcomponent %}#toc-positionMode) and also adds a `box-shadow` to the bottom of the AppBar.
         *
         * * `bottom`&mdash;Positions the AppBar at the bottom of the content.
         *    Setting the `position` property to `bottom` requires adding the Appbar component after the page content.
         *   The position property applies CSS `bottom: 0` style in [`fixed mode`]({% slug api_navigation_appbarcomponent %}#toc-positionMode) and also adds a `box-shadow ` to the top of the AppBar.
         *
         */
        this.position = 'top';
        /**
         * Specifies the positionMode of the AppBar
         * ([see example]({% slug positioning_appbar %}#toc-positionmode)).
         *
         * * The possible values are:
         * * `static` (Default)&mdash;Does not position the AppBar in any special way. It is positioned according to the normal flow of the page.
         * * `sticky`&mdash;Positions the AppBar based on the user's scroll position. A sticky element toggles between static and fixed CSS [`position`](https://developer.mozilla.org/en-US/docs/Web/CSS/position) property, depending on the scroll position.
         * * `fixed`&mdash;Positions the AppBar relative to the viewport. It always stays in the same place even if the page is scrolled.
         */
        this.positionMode = 'static';
        /**
         * Specifies the theme color of the AppBar.
         * The theme color will be applied as background color of the component.
         *
         *
         * * The possible values are:
         * * `light` (Default)&mdash;Applies coloring based on light theme color.
         * * `dark`&mdash;Applies coloring based on dark theme color.
         * * `inherit`&mdash; Applies inherited coloring value.
         *
         */
        this.themeColor = 'light';
        this.rtl = false;
        validatePackage(packageMetadata);
        this.dynamicRTLSubscription = this.localizationService.changes.subscribe(({ rtl }) => {
            this.rtl = rtl;
            this.direction = this.rtl ? 'rtl' : 'ltr';
        });
    }
    get topClass() {
        return this.position === 'top';
    }
    get bottomClass() {
        return this.position === 'bottom';
    }
    get stickyClass() {
        return this.positionMode === 'sticky';
    }
    get fixedClass() {
        return this.positionMode === 'fixed';
    }
    get staticClass() {
        return this.positionMode === 'static';
    }
    get lightClass() {
        return this.themeColor === 'light';
    }
    get darkClass() {
        return this.themeColor === 'dark';
    }
    get inheritClass() {
        return this.themeColor === 'inherit';
    }
    ngOnDestroy() {
        if (this.dynamicRTLSubscription) {
            this.dynamicRTLSubscription.unsubscribe();
        }
    }
};
AppBarComponent.ɵfac = function AppBarComponent_Factory(t) { return new (t || AppBarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService)); };
AppBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AppBarComponent, selectors: [["kendo-appbar"]], hostVars: 19, hostBindings: function AppBarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("dir", ctx.direction);
        ɵngcc0.ɵɵclassProp("k-appbar", ctx.hostClass)("k-appbar-top", ctx.topClass)("k-appbar-bottom", ctx.bottomClass)("k-appbar-sticky", ctx.stickyClass)("k-appbar-fixed", ctx.fixedClass)("k-appbar-static", ctx.staticClass)("k-appbar-light", ctx.lightClass)("k-appbar-dark", ctx.darkClass)("k-appbar-inherit", ctx.inheritClass);
    } }, inputs: { position: "position", positionMode: "positionMode", themeColor: "themeColor" }, exportAs: ["kendoAppBar"], features: [ɵngcc0.ɵɵProvidersFeature([
            LocalizationService,
            {
                provide: L10N_PREFIX,
                useValue: 'kendo.appbar.component'
            }
        ])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function AppBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
__decorate([
    HostBinding('class.k-appbar'),
    __metadata("design:type", Boolean)
], AppBarComponent.prototype, "hostClass", void 0);
__decorate([
    HostBinding('class.k-appbar-top'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], AppBarComponent.prototype, "topClass", null);
__decorate([
    HostBinding('class.k-appbar-bottom'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], AppBarComponent.prototype, "bottomClass", null);
__decorate([
    HostBinding('class.k-appbar-sticky'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], AppBarComponent.prototype, "stickyClass", null);
__decorate([
    HostBinding('class.k-appbar-fixed'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], AppBarComponent.prototype, "fixedClass", null);
__decorate([
    HostBinding('class.k-appbar-static'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], AppBarComponent.prototype, "staticClass", null);
__decorate([
    HostBinding('class.k-appbar-light'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], AppBarComponent.prototype, "lightClass", null);
__decorate([
    HostBinding('class.k-appbar-dark'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], AppBarComponent.prototype, "darkClass", null);
__decorate([
    HostBinding('class.k-appbar-inherit'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], AppBarComponent.prototype, "inheritClass", null);
__decorate([
    HostBinding('attr.dir'),
    __metadata("design:type", String)
], AppBarComponent.prototype, "direction", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], AppBarComponent.prototype, "position", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], AppBarComponent.prototype, "positionMode", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], AppBarComponent.prototype, "themeColor", void 0);
AppBarComponent = __decorate([ __metadata("design:paramtypes", [LocalizationService])
], AppBarComponent);

/**
 * Represents the [Kendo UI AppBarSection component for Angular]({% slug contentarrangement_appbar %}#toc-sections).
 *
 * @example
 *
 * ```ts-no-run
 *  * _@Component({
 *    selector: 'my-app',
 *    template: `
 *        <kendo-appbar>
 *            <kendo-appbar-section>
 *                <h2>Page Title</h2>
 *            </kendo-appbar-section>
 *        </kendo-appbar>
 *    `
 * })
 * class AppComponent {}
 */
let AppBarSectionComponent = class AppBarSectionComponent {
    /**
     * Represents the [Kendo UI AppBarSection component for Angular]({% slug contentarrangement_appbar %}#toc-sections).
     *
     * @example
     *
     * ```ts-no-run
     *  * _@Component({
     *    selector: 'my-app',
     *    template: `
     *        <kendo-appbar>
     *            <kendo-appbar-section>
     *                <h2>Page Title</h2>
     *            </kendo-appbar-section>
     *        </kendo-appbar>
     *    `
     * })
     * class AppComponent {}
     */
    constructor() {
        this.hostClass = true;
    }
};
AppBarSectionComponent.ɵfac = function AppBarSectionComponent_Factory(t) { return new (t || AppBarSectionComponent)(); };
AppBarSectionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AppBarSectionComponent, selectors: [["kendo-appbar-section"]], hostVars: 2, hostBindings: function AppBarSectionComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("k-appbar-section", ctx.hostClass);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AppBarSectionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
__decorate([
    HostBinding('class.k-appbar-section'),
    __metadata("design:type", Boolean)
], AppBarSectionComponent.prototype, "hostClass", void 0);

/**
 * @hidden
 */
const isPresent = (value) => value !== null && value !== undefined;
/**
 * @hidden
 */
const outerWidth = (element) => {
    let width = element.offsetWidth;
    const style = getComputedStyle(element);
    width += (parseFloat(style.marginLeft) || 0) + (parseFloat(style.marginRight) || 0);
    return width;
};

/**
 * Represents the [Kendo UI AppBarSpacer component for Angular]({% slug contentarrangement_appbar %}#toc-spacings).
 * Used to give additional white space between the AppBar sections and provides a way for customizing its width.
 *
 * @example
 *
 * ```ts-no-run
 *  * _@Component({
 *    selector: 'my-app',
 *    template: `
 *        <kendo-appbar>
 *            <kendo-appbar-section>
 *                 <button class="k-button k-button-clear">
 *                     <kendo-icon [name]="'menu'"></kendo-icon>
 *                 </button>
 *            </kendo-appbar-section>
 *
 *            <kendo-appbar-spacer></kendo-appbar-spacer>
 *
 *            <kendo-appbar-section>
 *                <h2>Page Title</h2>
 *            </kendo-appbar-section>
 *        </kendo-appbar>
 *    `
 * })
 * class AppComponent {}
 * ```
 */
let AppBarSpacerComponent = class AppBarSpacerComponent {
    constructor(renderer, element) {
        this.renderer = renderer;
        this.element = element;
        this.hostClass = true;
    }
    get sizedClass() {
        return isPresent(this.width);
    }
    ngAfterViewInit() {
        if (isPresent(this.width)) {
            const element = this.element.nativeElement;
            this.renderer.setStyle(element, 'flexBasis', this.width);
        }
    }
};
AppBarSpacerComponent.ɵfac = function AppBarSpacerComponent_Factory(t) { return new (t || AppBarSpacerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AppBarSpacerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AppBarSpacerComponent, selectors: [["kendo-appbar-spacer"]], hostVars: 4, hostBindings: function AppBarSpacerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("k-appbar-spacer", ctx.hostClass)("k-appbar-spacer-sized", ctx.sizedClass);
    } }, inputs: { width: "width" }, decls: 0, vars: 0, template: function AppBarSpacerComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    HostBinding('class.k-appbar-spacer'),
    __metadata("design:type", Boolean)
], AppBarSpacerComponent.prototype, "hostClass", void 0);
__decorate([
    HostBinding('class.k-appbar-spacer-sized'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], AppBarSpacerComponent.prototype, "sizedClass", null);
__decorate([
    Input(),
    __metadata("design:type", String)
], AppBarSpacerComponent.prototype, "width", void 0);
AppBarSpacerComponent = __decorate([ __metadata("design:paramtypes", [Renderer2, ElementRef])
], AppBarSpacerComponent);

const exportedModules = [
    AppBarComponent,
    AppBarSectionComponent,
    AppBarSpacerComponent
];
const declarations = [
    ...exportedModules
];
/**
 * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})
 * definition for the AppBar component.
 *
 * * @example
 *
 * ```ts-no-run
 * // Import the AppBar module
 * import { AppBarModule } from '@progress/kendo-angular-navigation';
 *
 * // The browser platform with a compiler
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { BrowserModule } from '@angular/platform-browser';
 *
 * import { NgModule } from '@angular/core';
 *
 * // Import the app component
 * import { AppComponent } from './app.component';
 *
 * // Define the app module
 * _@NgModule({
 *     declarations: [AppComponent], // declare app component
 *     imports:      [BrowserModule, AppBarModule], // import AppBar module
 *     bootstrap:    [AppComponent]
 * })
 * export class AppModule {}
 *
 * // Compile and launch the module
 * platformBrowserDynamic().bootstrapModule(AppModule);
 *
 * ```
 */
let AppBarModule = class AppBarModule {
};
AppBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AppBarModule });
AppBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AppBarModule_Factory(t) { return new (t || AppBarModule)(); }, imports: [[CommonModule]] });

/**
 * Represents a template that defines the content of a Breadcrumb item.
 * To define the template, nest an `<ng-template>` tag with the `kendoBreadCrumbItemTemplate` directive inside the `<kendo-breadcrumb>` tag.
 *
 * For more information and example refer to the [Templates]({% slug templates_breadcrumb %}) article.
 */
let BreadCrumbItemTemplateDirective = class BreadCrumbItemTemplateDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
};
BreadCrumbItemTemplateDirective.ɵfac = function BreadCrumbItemTemplateDirective_Factory(t) { return new (t || BreadCrumbItemTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8)); };
BreadCrumbItemTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BreadCrumbItemTemplateDirective, selectors: [["", "kendoBreadCrumbItemTemplate", ""]] });
BreadCrumbItemTemplateDirective = __decorate([ __param(0, Optional()),
    __metadata("design:paramtypes", [TemplateRef])
], BreadCrumbItemTemplateDirective);

/**
 * @hidden
 */
const BREADCRUMB_ITEM_INDEX = 'data-kendo-breadcrumb-index';

/**
 * @hidden
 */
let BreadCrumbItemComponent = class BreadCrumbItemComponent {
    constructor(el) {
        this.el = el;
        this.index = -1;
        this.hostClasses = true;
        this.disabled = false;
    }
    get isRootItem() {
        return this.item.context.isFirst;
    }
    get isDisabled() {
        return this.disabled || null;
    }
    get isLastItem() {
        return this.item.context.isLast;
    }
    ngOnInit() {
        this.disabled = this.item.data && (this.item.data.disabled || this.item.context.isLast);
    }
    ngAfterViewInit() {
        if (isDocumentAvailable()) {
            this.width = outerWidth(this.el.nativeElement);
        }
    }
    onImageLoad() {
        if (isDocumentAvailable()) {
            this.width = outerWidth(this.el.nativeElement);
        }
    }
};
BreadCrumbItemComponent.ɵfac = function BreadCrumbItemComponent_Factory(t) { return new (t || BreadCrumbItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
BreadCrumbItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadCrumbItemComponent, selectors: [["", "kendoBreadCrumbItem", ""]], hostVars: 9, hostBindings: function BreadCrumbItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-disabled", ctx.isDisabled);
        ɵngcc0.ɵɵclassProp("k-flex-none", ctx.hostClasses)("k-breadcrumb-item", ctx.hostClasses)("k-breadcrumb-root-item", ctx.isRootItem)("k-breadcrumb-last-item", ctx.isLastItem);
    } }, inputs: { index: "index", item: "item", collapseMode: "collapseMode", itemTemplate: "itemTemplate" }, attrs: _c1, ngContentSelectors: _c5, decls: 5, vars: 3, consts: [["separator", ""], [4, "ngIf"], [4, "ngTemplateOutlet"], ["role", "link", "class", "k-cursor-pointer k-flex-none", 3, "ngClass", "title", "tabindex", 4, "ngIf"], ["role", "link", 1, "k-cursor-pointer", "k-flex-none", 3, "ngClass", "title", "tabindex"], ["class", "k-image", "role", "presentation", 3, "src", "load", 4, "ngIf"], [3, "class", 4, "ngIf"], ["role", "presentation", 1, "k-image", 3, "src", "load"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function BreadCrumbItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c4);
        ɵngcc0.ɵɵtemplate(0, BreadCrumbItemComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, BreadCrumbItemComponent_ng_container_2_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(3, BreadCrumbItemComponent_ng_container_3_Template, 3, 2, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(4, BreadCrumbItemComponent_ng_container_4_Template, 2, 1, "ng-container", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.collapseMode === "wrap");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.item.context.collapsed);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.collapseMode !== "wrap");
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], BreadCrumbItemComponent.prototype, "item", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BreadCrumbItemComponent.prototype, "collapseMode", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], BreadCrumbItemComponent.prototype, "index", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BreadCrumbItemComponent.prototype, "itemTemplate", void 0);
__decorate([
    HostBinding('class.k-flex-none'),
    HostBinding('class.k-breadcrumb-item'),
    __metadata("design:type", Boolean)
], BreadCrumbItemComponent.prototype, "hostClasses", void 0);
__decorate([
    HostBinding('class.k-breadcrumb-root-item'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], BreadCrumbItemComponent.prototype, "isRootItem", null);
__decorate([
    HostBinding('attr.aria-disabled'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], BreadCrumbItemComponent.prototype, "isDisabled", null);
__decorate([
    HostBinding('class.k-breadcrumb-last-item'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], BreadCrumbItemComponent.prototype, "isLastItem", null);
BreadCrumbItemComponent = __decorate([ __metadata("design:paramtypes", [ElementRef])
], BreadCrumbItemComponent);

const closestInScope = (target, targetAttr, predicate, scope) => {
    while (target && target !== scope && !predicate(target, targetAttr)) {
        target = target.parentNode;
    }
    if (target !== scope) {
        return target;
    }
};
const hasItemIndex = (item, indexAttr) => isPresent(item.getAttribute(indexAttr));
/**
 * @hidden
 */
const itemIndex = (item, indexAttr) => +item.getAttribute(indexAttr);
/**
 * @hidden
 */
const closestItem = (target, targetAttr, scope) => closestInScope(target, targetAttr, hasItemIndex, scope);

/**
 * @hidden
 */
let BreadCrumbListComponent = class BreadCrumbListComponent {
    constructor(el, zone) {
        this.el = el;
        this.zone = zone;
        this.items = [];
        this.collapseMode = 'auto';
        this.itemClick = new EventEmitter();
        const element = this.el.nativeElement;
        this.isRootItemContainer = element.classList.contains('k-breadcrumb-root-item-container');
        this.zone.runOutsideAngular(() => {
            const click$ = fromEvent(element, 'click');
            const enterKey$ = fromEvent(element, 'keydown').pipe(filter((ev /* KeyboardEvent causes lint error */) => ev.keyCode === Keys.Enter));
            this.domEventsSubscription = merge(click$, enterKey$)
                .pipe(map((ev) => ev.target), filter(e => !e.classList.contains('k-breadcrumb-delimiter-icon')), // do not trigger handler when a separator is clicked
            map(e => this.getItemIndex(e)), filter(isPresent), map(i => parseInt(i, 10)), map(i => this.items[i]), filter(item => !item.data.disabled && !item.context.isLast), map(item => item.data))
                .subscribe(el => {
                this.zone.run(() => this.itemClick.emit(el));
            });
        });
    }
    ngOnDestroy() {
        this.domEventsSubscription.unsubscribe();
    }
    getItemIndex(target) {
        const item = closestItem(target, BREADCRUMB_ITEM_INDEX, this.el.nativeElement);
        if (item) {
            return itemIndex(item, BREADCRUMB_ITEM_INDEX);
        }
    }
};
BreadCrumbListComponent.ɵfac = function BreadCrumbListComponent_Factory(t) { return new (t || BreadCrumbListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
BreadCrumbListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadCrumbListComponent, selectors: [["", "kendoBreadCrumbList", ""]], viewQuery: function BreadCrumbListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(BreadCrumbItemComponent, 3);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.renderedItems = _t);
    } }, inputs: { items: "items", collapseMode: "collapseMode", itemTemplate: "itemTemplate", separatorIcon: "separatorIcon" }, outputs: { itemClick: "itemClick" }, attrs: _c6, decls: 1, vars: 1, consts: [[4, "ngFor", "ngForOf"], ["kendoBreadCrumbItem", "", 3, "item", "index", "collapseMode", "itemTemplate", 4, "ngIf"], ["kendoBreadCrumbItem", "", 3, "item", "index", "collapseMode", "itemTemplate"], ["renderedItem", ""], ["kendoBreadCrumbSeparator", "", 3, "icon", 4, "ngIf"], ["kendoBreadCrumbSeparator", "", 3, "icon"]], template: function BreadCrumbListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BreadCrumbListComponent_ng_container_0_Template, 2, 1, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
    } }, directives: function () { return [ɵngcc2.NgForOf, ɵngcc2.NgIf, BreadCrumbItemComponent, BreadCrumbSeparatorDirective]; }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Array)
], BreadCrumbListComponent.prototype, "items", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BreadCrumbListComponent.prototype, "itemTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BreadCrumbListComponent.prototype, "collapseMode", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BreadCrumbListComponent.prototype, "separatorIcon", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], BreadCrumbListComponent.prototype, "itemClick", void 0);
__decorate([
    ViewChildren(BreadCrumbItemComponent, { static: true }),
    __metadata("design:type", QueryList)
], BreadCrumbListComponent.prototype, "renderedItems", void 0);
BreadCrumbListComponent = __decorate([ __metadata("design:paramtypes", [ElementRef, NgZone])
], BreadCrumbListComponent);

const getCollapsed = (itemComponent) => itemComponent.item.context.collapsed;
/**
 * @hidden
 */
const collapsed = (itemComponent) => getCollapsed(itemComponent) === true;
/**
 * @hidden
 */
const expanded = (itemComponent) => getCollapsed(itemComponent) === false;
const toggleFirst = (collapsed) => (itemComponents) => (itemComponents.find(ic => getCollapsed(ic) === collapsed).item.context.collapsed = !collapsed);
/**
 * @hidden
 */
const collapseFirst = toggleFirst(false);
/**
 * @hidden
 */
const expandFirst = toggleFirst(true);

/**
 * Represents the [Kendo UI Breadcrumb component for Angular]({% slug overview_breadcrumb %}).
 *
 * @example
 * ```ts-no-run
 * _@Component({
 *      selector: 'my-app',
 *      template: `
 *          <kendo-breadcrumb
 *              [items]="items"
 *              (itemClick)="onItemClick($event)">
 *          </kendo-breadcrumb>
 *      `
 * })
 * class AppComponent {
 *      public items: BreadCrumbItem[] = [
 *          { text: 'Home', title: 'Home', icon: 'home' },
 *          { text: 'Kids', title: 'Kids' },
 *          { text: '8y-16y', title: '8y-16y', disabled: true },
 *          { text: 'New collection', title: 'New collection' },
 *          { text: 'Jeans', title: 'Jeans' }
 *      ];
 *
 *      public onItemClick(item: BreadCrumbItem): void {
 *          console.log(item);
 *      }
 * }
 * ```
 */
let BreadCrumbComponent = class BreadCrumbComponent {
    constructor(el, cdr, zone, localization) {
        this.el = el;
        this.cdr = cdr;
        this.zone = zone;
        this.localization = localization;
        /**
         * Fires when a Breadcrumb item is clicked. The event will not be fired by disabled items and the last item.
         */
        this.itemClick = new EventEmitter();
        this.hostClasses = true;
        this._items = [];
        this._collapseMode = 'auto';
        this.updateItems = new ReplaySubject();
        this.afterViewInit = new Subject();
        this.subscriptions = new Subscription();
        this.direction = 'ltr';
        validatePackage(packageMetadata);
        const updateItems$ = this.updateItems.asObservable().pipe(startWith([]));
        this.direction = localization.rtl ? 'rtl' : 'ltr';
        this.itemsData$ = updateItems$.pipe(map(items => items.filter(Boolean)), map(items => items.map((item, index, collection) => ({
            context: {
                collapsed: false,
                isLast: index === collection.length - 1,
                isFirst: index === 0
            },
            data: item
        }))), share());
        this.firstItem$ = updateItems$.pipe(map(items => {
            if (items.length > 0) {
                return [
                    {
                        context: {
                            collapsed: false,
                            isLast: items.length === 1,
                            isFirst: true
                        },
                        data: items[0]
                    }
                ];
            }
            return [];
        }), share());
    }
    /**
     * The collection of items that will be rendered in the Breadcrumb.
     */
    set items(items) {
        this._items = items || [];
        this.updateItems.next(this._items);
    }
    get items() {
        return this._items;
    }
    /**
     * Specifies the collapse mode of the Breadcrumb ([see example]({% slug collapse_modes_breadcrumb %})).
     *
     * The possible values are:
     * - `auto` (default)&mdash;items are automatically collapsed based on the width of the Breadcrumb.
     * - `wrap`&mdash;items are wrapped on multiple rows.
     * - `none`&mdash;all items are expanded on the same row.
     *
     * For more information and example refer to the [Collapse Modes]({% slug collapse_modes_breadcrumb %}) article.
     */
    set collapseMode(mode) {
        if (isDevMode() && ['auto', 'wrap', 'none'].indexOf(mode) < 0) {
            throw new Error('Invalid collapse mode. Allowed values are "auto", "wrap" or "none". \nFor more details see https://www.telerik.com/kendo-angular-ui/components/navigation/api/BreadCrumbCollapseMode/');
        }
        this._collapseMode = mode || 'auto';
        this.updateItems.next(this.items);
    }
    get collapseMode() {
        return this._collapseMode;
    }
    get wrapMode() {
        return this.collapseMode === 'wrap';
    }
    get getDir() {
        return this.direction;
    }
    ngOnInit() {
        this.subscriptions.add(this.localization.changes.subscribe(({ rtl }) => (this.direction = rtl ? 'rtl' : 'ltr')));
    }
    ngAfterViewInit() {
        this.attachResizeHandler();
        this.afterViewInit.next();
    }
    ngOnDestroy() {
        this.subscriptions.unsubscribe();
    }
    handleResize() {
        const autoCollapseCandidates = [
            ...this.listComponent.renderedItems.toArray().filter(ri => !ri.item.context.isFirst && !ri.item.context.isLast)
        ];
        const componentWidth = outerWidth(this.el.nativeElement);
        const itemsContainerWidth = Math.floor(this.itemsContainers
            .toArray()
            .map(el => outerWidth(el.nativeElement))
            .reduce((acc, curr) => acc + curr, 0));
        const nextExpandWidth = ([...autoCollapseCandidates].reverse().find(collapsed) || { width: 0 }).width;
        // // shrink
        if (componentWidth <= itemsContainerWidth && autoCollapseCandidates.find(expanded)) {
            collapseFirst(autoCollapseCandidates);
            // needed by resize sensor
            this.cdr.detectChanges();
            return this.handleResize();
        }
        // expand
        if (componentWidth > itemsContainerWidth + nextExpandWidth && autoCollapseCandidates.find(collapsed)) {
            expandFirst([...autoCollapseCandidates].reverse());
            // needed by resize sensor
            this.cdr.detectChanges();
            return this.handleResize();
        }
    }
    shouldResize() {
        return isDocumentAvailable() && this.collapseMode === 'auto';
    }
    attachResizeHandler() {
        // resize when:
        // the component is initialized
        // the container is resized
        // items are added/removed
        this.subscriptions.add(merge(this.resizeSensor.resize, this.itemsData$, this.afterViewInit.asObservable())
            .pipe(filter(() => this.shouldResize()))
            .subscribe(() => {
            this.zone.runOutsideAngular(() => setTimeout(() => {
                this.zone.run(() => {
                    if (this.listComponent) {
                        this.handleResize();
                        this.resizeSensor.acceptSize();
                    }
                });
            }));
        }));
    }
};
BreadCrumbComponent.ɵfac = function BreadCrumbComponent_Factory(t) { return new (t || BreadCrumbComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService)); };
BreadCrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadCrumbComponent, selectors: [["kendo-breadcrumb"]], contentQueries: function BreadCrumbComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, BreadCrumbItemTemplateDirective, 3);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);
    } }, viewQuery: function BreadCrumbComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c7, 3);
        ɵngcc0.ɵɵviewQuery(BreadCrumbListComponent, 3);
        ɵngcc0.ɵɵviewQuery(_c8, 1, ElementRef);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.resizeSensor = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemsContainers = _t);
    } }, hostVars: 7, hostBindings: function BreadCrumbComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("dir", ctx.getDir);
        ɵngcc0.ɵɵclassProp("k-widget", ctx.hostClasses)("k-breadcrumb", ctx.hostClasses)("k-breadcrumb-wrap", ctx.wrapMode);
    } }, inputs: { items: "items", collapseMode: "collapseMode", separatorIcon: "separatorIcon" }, outputs: { itemClick: "itemClick" }, exportAs: ["kendoBreadCrumb"], features: [ɵngcc0.ɵɵProvidersFeature([
            LocalizationService,
            {
                provide: L10N_PREFIX,
                useValue: 'kendo.breadcrumb'
            }
        ])], decls: 6, vars: 12, consts: [["kendoBreadCrumbList", "", "class", "k-breadcrumb-root-item-container", 3, "items", "itemTemplate", "collapseMode", "separatorIcon", "itemClick", 4, "ngIf"], ["kendoBreadCrumbList", "", 1, "k-breadcrumb-container", 3, "items", "itemTemplate", "collapseMode", "separatorIcon", "ngClass", "itemClick"], ["itemsContainer", ""], [3, "rateLimit"], ["resizeSensor", ""], ["kendoBreadCrumbList", "", 1, "k-breadcrumb-root-item-container", 3, "items", "itemTemplate", "collapseMode", "separatorIcon", "itemClick"]], template: function BreadCrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BreadCrumbComponent_ol_0_Template, 3, 6, "ol", 0);
        ɵngcc0.ɵɵelementStart(1, "ol", 1, 2);
        ɵngcc0.ɵɵlistener("itemClick", function BreadCrumbComponent_Template_ol_itemClick_1_listener($event) { return ctx.itemClick.emit($event); });
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "kendo-resize-sensor", 3, 4);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.collapseMode === "wrap");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("items", ɵngcc0.ɵɵpipeBind1(3, 7, ctx.itemsData$))("itemTemplate", ctx.itemTemplate == null ? null : ctx.itemTemplate.templateRef)("collapseMode", ctx.collapseMode)("separatorIcon", ctx.separatorIcon)("ngClass", ɵngcc0.ɵɵpureFunction2(9, _c9, ctx.collapseMode === "wrap", ctx.collapseMode === "none"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("rateLimit", 1000);
    } }, directives: [ɵngcc2.NgIf, BreadCrumbListComponent, ɵngcc2.NgClass, ɵngcc3.ResizeSensorComponent], pipes: [ɵngcc2.AsyncPipe], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Array),
    __metadata("design:paramtypes", [Array])
], BreadCrumbComponent.prototype, "items", null);
__decorate([
    Input(),
    __metadata("design:type", String)
], BreadCrumbComponent.prototype, "separatorIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], BreadCrumbComponent.prototype, "collapseMode", null);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], BreadCrumbComponent.prototype, "itemClick", void 0);
__decorate([
    ViewChild('resizeSensor', { static: true }),
    __metadata("design:type", ResizeSensorComponent)
], BreadCrumbComponent.prototype, "resizeSensor", void 0);
__decorate([
    ViewChildren('itemsContainer', { read: ElementRef }),
    __metadata("design:type", QueryList)
], BreadCrumbComponent.prototype, "itemsContainers", void 0);
__decorate([
    ViewChild(BreadCrumbListComponent, { static: true }),
    __metadata("design:type", BreadCrumbListComponent)
], BreadCrumbComponent.prototype, "listComponent", void 0);
__decorate([
    ContentChild(BreadCrumbItemTemplateDirective, { static: true }),
    __metadata("design:type", BreadCrumbItemTemplateDirective)
], BreadCrumbComponent.prototype, "itemTemplate", void 0);
__decorate([
    HostBinding('class.k-widget'),
    HostBinding('class.k-breadcrumb'),
    __metadata("design:type", Boolean)
], BreadCrumbComponent.prototype, "hostClasses", void 0);
__decorate([
    HostBinding('class.k-breadcrumb-wrap'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], BreadCrumbComponent.prototype, "wrapMode", null);
__decorate([
    HostBinding('attr.dir'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [])
], BreadCrumbComponent.prototype, "getDir", null);
BreadCrumbComponent = __decorate([ __metadata("design:paramtypes", [ElementRef,
        ChangeDetectorRef,
        NgZone,
        LocalizationService])
], BreadCrumbComponent);

const DEFAULT_ICON = 'arrow-chevron-right';
const DEFAULT_RTL_ICON = 'arrow-chevron-left';
/**
 * @hidden
 */
let BreadCrumbSeparatorDirective = class BreadCrumbSeparatorDirective {
    constructor(el, localization) {
        this.el = el;
        this.localization = localization;
        this.defaultClasses = true;
        this.ariaHidden = true;
        this.direction = 'ltr';
        this.direction = this.localization.rtl ? 'rtl' : 'ltr';
    }
    set icon(icon) {
        const element = this.el.nativeElement;
        element.classList.remove(`k-i-${this._icon}`);
        if (isPresent(icon)) {
            this._icon = icon;
            this.hasDefaultIcon = false;
        }
        else {
            this._icon = this.direction === 'ltr' ? DEFAULT_ICON : DEFAULT_RTL_ICON;
            this.hasDefaultIcon = true;
        }
        element.classList.add(`k-i-${this._icon}`);
    }
    get icon() {
        return this._icon;
    }
    ngOnInit() {
        this.localizationChangesSubscription = this.localization.changes.subscribe(({ rtl }) => {
            this.direction = rtl ? 'rtl' : 'ltr';
            if (this.hasDefaultIcon) {
                this.icon = undefined;
            }
        });
    }
    ngOnDestroy() {
        this.localizationChangesSubscription.unsubscribe();
    }
};
BreadCrumbSeparatorDirective.ɵfac = function BreadCrumbSeparatorDirective_Factory(t) { return new (t || BreadCrumbSeparatorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService)); };
BreadCrumbSeparatorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BreadCrumbSeparatorDirective, selectors: [["", "kendoBreadCrumbSeparator", ""]], hostVars: 5, hostBindings: function BreadCrumbSeparatorDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-hidden", ctx.ariaHidden);
        ɵngcc0.ɵɵclassProp("k-breadcrumb-delimiter-icon", ctx.defaultClasses)("k-icon", ctx.defaultClasses);
    } }, inputs: { icon: "icon" } });
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], BreadCrumbSeparatorDirective.prototype, "icon", null);
__decorate([
    HostBinding('class.k-breadcrumb-delimiter-icon'),
    HostBinding('class.k-icon'),
    __metadata("design:type", Boolean)
], BreadCrumbSeparatorDirective.prototype, "defaultClasses", void 0);
__decorate([
    HostBinding('attr.aria-hidden'),
    __metadata("design:type", Boolean)
], BreadCrumbSeparatorDirective.prototype, "ariaHidden", void 0);
BreadCrumbSeparatorDirective = __decorate([ __metadata("design:paramtypes", [ElementRef, LocalizationService])
], BreadCrumbSeparatorDirective);

const templateDirectives = [
    BreadCrumbItemTemplateDirective
];
const exportedModules$1 = [
    BreadCrumbComponent,
    BreadCrumbItemComponent,
    BreadCrumbListComponent,
    ...templateDirectives
];
const declarations$1 = [
    ...exportedModules$1,
    BreadCrumbSeparatorDirective
];
/**
 * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})
 * definition for the BreadCrumb component.
 * @example
 *
 * ```ts-no-run
 * // Import the BreadCrumb module
 * import { BreadCrumbModule } from '@progress/kendo-angular-navigation';
 *
 * // The browser platform with a compiler
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { BrowserModule } from '@angular/platform-browser';
 *
 * import { NgModule } from '@angular/core';
 *
 * // Import the app component
 * import { AppComponent } from './app.component';
 *
 * // Define the app module
 * _@NgModule({
 *     declarations: [AppComponent], // declare app component
 *     imports:      [BrowserModule, BreadCrumbModule], // import BreadCrumb module
 *     bootstrap:    [AppComponent]
 * })
 * export class AppModule {}
 *
 * // Compile and launch the module
 * platformBrowserDynamic().bootstrapModule(AppModule);
 *
 * ```
 */
let BreadCrumbModule = class BreadCrumbModule {
};
BreadCrumbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BreadCrumbModule });
BreadCrumbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BreadCrumbModule_Factory(t) { return new (t || BreadCrumbModule)(); }, imports: [[CommonModule, ResizeSensorModule]] });

/**
 * Represents a template that defines the item content of the BottomNavigation.
 * To define the template, nest an `<ng-template>` tag
 * with the `kendoBottomNavigationItemTemplate` directive inside the `<kendo-bottomnavigation>` tag ([see example]({% slug templates_bottomnavigation %})).
 */
let BottomNavigationItemTemplateDirective = class BottomNavigationItemTemplateDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
};
BottomNavigationItemTemplateDirective.ɵfac = function BottomNavigationItemTemplateDirective_Factory(t) { return new (t || BottomNavigationItemTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8)); };
BottomNavigationItemTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BottomNavigationItemTemplateDirective, selectors: [["", "kendoBottomNavigationItemTemplate", ""]] });
BottomNavigationItemTemplateDirective = __decorate([ __param(0, Optional()),
    __metadata("design:paramtypes", [TemplateRef])
], BottomNavigationItemTemplateDirective);

/**
 * @hidden
 */
let BottomNavigationItemComponent = class BottomNavigationItemComponent {
    get disabledClass() {
        return this.item.disabled;
    }
    get label() {
        return this.item.text ? this.item.text : null;
    }
    get tabindex() {
        return this.item.tabIndex ? this.item.tabIndex : 0;
    }
    get selectedClass() {
        return this.selectedIdx ? this.selectedIdx === this.index : this.item.selected;
    }
    get itemIcon() {
        return this.item.icon || this.item.iconClass ? true : false;
    }
    get iconClasses() {
        const kendoIcon = this.item.icon ? `k-icon k-i-${this.item.icon}` : '';
        const customIcon = this.item.iconClass ? this.item.iconClass : '';
        return `${kendoIcon} ${customIcon}`;
    }
};
BottomNavigationItemComponent.ɵfac = function BottomNavigationItemComponent_Factory(t) { return new (t || BottomNavigationItemComponent)(); };
BottomNavigationItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BottomNavigationItemComponent, selectors: [["", "kendoBottomNavigationItem", ""]], hostVars: 8, hostBindings: function BottomNavigationItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-disabled", ctx.disabledClass)("aria-label", ctx.label)("tabindex", ctx.tabindex)("aria-selected", ctx.selectedClass);
        ɵngcc0.ɵɵclassProp("k-state-disabled", ctx.disabledClass)("k-state-selected", ctx.selectedClass);
    } }, inputs: { itemTemplate: "itemTemplate", item: "item", index: "index", disabledComponent: "disabledComponent", selectedIdx: "selectedIdx" }, attrs: _c10, decls: 2, vars: 2, consts: [[4, "ngIf"], ["class", "k-bottom-nav-item-icon", 3, "ngClass", 4, "ngIf"], ["class", "k-bottom-nav-item-text", 4, "ngIf"], [1, "k-bottom-nav-item-icon", 3, "ngClass"], [1, "k-bottom-nav-item-text"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function BottomNavigationItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BottomNavigationItemComponent_ng_container_0_Template, 3, 2, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, BottomNavigationItemComponent_1_Template, 1, 4, undefined, 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.itemTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.itemTemplate);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc2.NgTemplateOutlet], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", BottomNavigationItemTemplateDirective)
], BottomNavigationItemComponent.prototype, "itemTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], BottomNavigationItemComponent.prototype, "item", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], BottomNavigationItemComponent.prototype, "index", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], BottomNavigationItemComponent.prototype, "disabledComponent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], BottomNavigationItemComponent.prototype, "selectedIdx", void 0);
__decorate([
    HostBinding('attr.aria-disabled'),
    HostBinding('class.k-state-disabled'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], BottomNavigationItemComponent.prototype, "disabledClass", null);
__decorate([
    HostBinding('attr.aria-label'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [])
], BottomNavigationItemComponent.prototype, "label", null);
__decorate([
    HostBinding('attr.tabindex'),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [])
], BottomNavigationItemComponent.prototype, "tabindex", null);
__decorate([
    HostBinding('attr.aria-selected'),
    HostBinding('class.k-state-selected'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], BottomNavigationItemComponent.prototype, "selectedClass", null);

/**
 * @hidden
 */
class PreventableEvent {
    /**
     * @hidden
     */
    constructor(args) {
        this.prevented = false;
        Object.assign(this, args);
    }
    /**
     * Prevents the default action for a specified event.
     * In this way, the source component suppresses
     * the built-in behavior that follows the event.
     */
    preventDefault() {
        this.prevented = true;
    }
    /**
     * Returns `true` if the event was prevented
     * by any of its subscribers.
     *
     * @returns `true` if the default action was prevented.
     * Otherwise, returns `false`.
     */
    isDefaultPrevented() {
        return this.prevented;
    }
}

/**
 * Arguments for the `select` event of the BottomNavigation.
 */
class BottomNavigationSelectEvent extends PreventableEvent {
}

/**
 * @hidden
 */
const BOTTOMNAVIGATION_ITEM_INDEX = 'data-kendo-bottomnavigation-index';
/**
 * @hidden
 */
const colors = ['primary', 'secondary', 'tertiary', 'info', 'success', 'warning', 'error', 'dark', 'light', 'inverse'];

/**
 * Represents the [Kendo UI BottomNavigation component for Angular]({% slug overview_bottomnavigation %}).
 *
 * @example
 * ```ts-no-run
 * _@Component({
 *      selector: 'my-app',
 *      template: `
 *          <kendo-bottomnavigation [items]="items"></kendo-bottomnavigation>
 *      `
 * })
 * class AppComponent {
 *      public items: Array<any> = [
 *          { text: 'Inbox', icon: 'email', selected: true },
 *          { text: 'Calendar', icon: 'calendar'},
 *          { text: 'Profile', icon: 'user'}
 *      ]
 * }
 * ```
 */
let BottomNavigationComponent = class BottomNavigationComponent {
    constructor(localization, hostElement, ngZone, changeDetector, renderer) {
        this.localization = localization;
        this.hostElement = hostElement;
        this.ngZone = ngZone;
        this.changeDetector = changeDetector;
        this.renderer = renderer;
        /**
         * Sets a top border to the BottomNavigation ([see example]({% slug appearance_bottomnavigation %})).
         *
         * @default false
         */
        this.border = false;
        /**
         * Disables the whole BottomNavigation.
         *
         * @default false
         */
        this.disabled = false;
        /**
         * Fires each time an item is selected. This event is preventable.
         */
        this.select = new EventEmitter();
        /**
         * @hidden
         */
        this.hostClass = true;
        /**
         * @hidden
         */
        this.role = 'navigation';
        this._fill = 'flat';
        this._itemFlow = 'vertical';
        this._positionMode = 'fixed';
        this._themeColor = 'primary';
        this._nativeHostElement = this.hostElement.nativeElement;
        this.subscriptions = new Subscription();
        this.rtl = false;
        this.dynamicRTLSubscription = this.localization.changes.subscribe(({ rtl }) => {
            this.rtl = rtl;
            this.direction = this.rtl ? 'rtl' : 'ltr';
        });
    }
    /**
     * The fill style of the BottomNavigation ([see example]({% slug appearance_bottomnavigation %})).
     *
     * * The possible values are:
     * * (Default) `flat`
     * * `solid`
     */
    set fill(fill) {
        this.renderer.removeClass(this._nativeHostElement, `k-bottom-nav-${this.fill}`);
        this._fill = fill === 'solid' ? 'solid' : 'flat';
        this.renderer.addClass(this._nativeHostElement, `k-bottom-nav-${this._fill}`);
    }
    get fill() {
        return this._fill;
    }
    /**
     * Specifies how the icon and text label are positioned in the BottomNavigation items ([see example]({% slug items_bottomnavigation %}#toc-itemflow)).
     *
     * The possible values are:
     * * (Default) `vertical` - Renders the text below the icon.
     * * `horizontal` - Renders the icon and the text on the same line.
     */
    set itemFlow(itemFlow) {
        this.renderer.removeClass(this._nativeHostElement, `k-bottom-nav-item-flow-${this.itemFlow}`);
        this._itemFlow = itemFlow === 'horizontal' ? 'horizontal' : 'vertical';
        this.renderer.addClass(this._nativeHostElement, `k-bottom-nav-item-flow-${this._itemFlow}`);
    }
    get itemFlow() {
        return this._itemFlow;
    }
    /**
     * Specifies the position and behavior of the BottomNavigation when the page is scrollable ([see example]({% slug positioning_bottomnavigation %})).
     *
     * The possible values are:
     * * (Default) `fixed` - The BottomNavigation always stays at the bottom of the viewport, regardless of the page scroll position.
     * * `sticky` - Positions the BottomNavigation at the end of the scrollable container.
     */
    set positionMode(positionMode) {
        this.renderer.removeClass(this._nativeHostElement, `k-pos-${this.positionMode}`);
        this._positionMode = positionMode === 'sticky' ? 'sticky' : 'fixed';
        this.renderer.addClass(this._nativeHostElement, `k-pos-${this._positionMode}`);
    }
    get positionMode() {
        return this._positionMode;
    }
    /**
     * Specifies the theme color of the BottomNavigation ([see example]({% slug appearance_bottomnavigation %})).
     *
     * * The possible values are:
     * * (Default) `primary` - Applies coloring based on the primary theme color.
     * * `secondary` - Applies coloring based on the secondary theme color.
     * * `tertiary` - Applies coloring based on the tertiary theme color.
     * * `info` - Applies coloring based on the info theme color.
     * * `success` - Applies coloring based on the success theme color.
     * * `warning` - Applies coloring based on the warning theme color.
     * * `error` - Applies coloring based on the error theme color.
     * * `dark` - Applies coloring based on the dark theme color.
     * * `light` - Applies coloring based on the light theme color.
     * * `inverse` - Applies coloring based on the inverted theme color.
     */
    set themeColor(themeColor) {
        const newColor = colors.find(color => color === themeColor);
        if (newColor) {
            this.renderer.removeClass(this._nativeHostElement, `k-bottom-nav-${this._themeColor}`);
            this._themeColor = themeColor;
            this.renderer.addClass(this._nativeHostElement, `k-bottom-nav-${this._themeColor}`);
        }
    }
    get themeColor() {
        return this._themeColor;
    }
    /**
     * @hidden
     */
    get borderClass() {
        return this.border;
    }
    /**
     * @hidden
     */
    get disabledClass() {
        return this.disabled;
    }
    /**
     * @hidden
     */
    ngOnInit() {
        this.initDomEvents();
    }
    /**
     * @hidden
     */
    ngAfterViewInit() {
        this.applyClasses();
    }
    /**
     * @hidden
     */
    ngOnDestroy() {
        if (this.dynamicRTLSubscription) {
            this.dynamicRTLSubscription.unsubscribe();
        }
        this.subscriptions.unsubscribe();
    }
    /**
     * @hidden
     */
    selectItem(idx, args) {
        const eventArgs = new BottomNavigationSelectEvent(Object.assign({}, args));
        this.select.emit(eventArgs);
        if (!eventArgs.isDefaultPrevented()) {
            this.selectedIdx = idx;
        }
    }
    applyClasses() {
        this.renderer.addClass(this._nativeHostElement, `k-bottom-nav-${this.fill}`);
        this.renderer.addClass(this._nativeHostElement, `k-bottom-nav-item-flow-${this.itemFlow}`);
        this.renderer.addClass(this._nativeHostElement, `k-pos-${this.positionMode}`);
        this.renderer.addClass(this._nativeHostElement, `k-bottom-nav-${this.themeColor}`);
    }
    initDomEvents() {
        if (!this.hostElement) {
            return;
        }
        this.ngZone.runOutsideAngular(() => {
            this.subscriptions.add(this.renderer.listen(this._nativeHostElement, 'click', this.clickHandler.bind(this)));
            this.subscriptions.add(this.renderer.listen(this._nativeHostElement, 'keydown', this.keyDownHandler.bind(this)));
        });
    }
    clickHandler(e) {
        const itemIdx = this.getBottomNavigationItemIndex(e.target);
        const item = this.items[itemIdx];
        if (!item) {
            return;
        }
        if (item.disabled) {
            e.preventDefault();
            return;
        }
        const args = {
            index: itemIdx,
            item: item,
            originalEvent: e,
            sender: this
        };
        this.ngZone.run(() => {
            this.selectItem(itemIdx, args);
            this.changeDetector.markForCheck();
        });
    }
    keyDownHandler(e) {
        const isEnterOrSpace = e.keyCode === Keys.Enter || e.keyCode === Keys.Space;
        if (!isEnterOrSpace) {
            return;
        }
        this.clickHandler(e);
    }
    getBottomNavigationItemIndex(target) {
        const item = closestItem(target, BOTTOMNAVIGATION_ITEM_INDEX, this._nativeHostElement);
        if (item) {
            return itemIndex(item, BOTTOMNAVIGATION_ITEM_INDEX);
        }
    }
};
BottomNavigationComponent.ɵfac = function BottomNavigationComponent_Factory(t) { return new (t || BottomNavigationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
BottomNavigationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BottomNavigationComponent, selectors: [["kendo-bottomnavigation"]], contentQueries: function BottomNavigationComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, BottomNavigationItemTemplateDirective, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);
    } }, hostVars: 8, hostBindings: function BottomNavigationComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx.role)("dir", ctx.direction);
        ɵngcc0.ɵɵclassProp("k-bottom-nav", ctx.hostClass)("k-bottom-nav-border", ctx.borderClass)("k-state-disabled", ctx.disabledClass);
    } }, inputs: { border: "border", disabled: "disabled", fill: "fill", itemFlow: "itemFlow", positionMode: "positionMode", themeColor: "themeColor", items: "items" }, outputs: { select: "select" }, exportAs: ["kendoBottomNavigation"], features: [ɵngcc0.ɵɵProvidersFeature([
            LocalizationService,
            {
                provide: L10N_PREFIX,
                useValue: 'kendo.bottomnavigation'
            }
        ])], decls: 1, vars: 1, consts: [[4, "ngIf"], ["kendoBottomNavigationItem", "", "role", "link", "class", "k-bottom-nav-item", 3, "disabledComponent", "item", "index", "selectedIdx", "itemTemplate", "ngClass", "ngStyle", 4, "ngFor", "ngForOf"], ["kendoBottomNavigationItem", "", "role", "link", 1, "k-bottom-nav-item", 3, "disabledComponent", "item", "index", "selectedIdx", "itemTemplate", "ngClass", "ngStyle"]], template: function BottomNavigationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BottomNavigationComponent_ng_container_0_Template, 2, 1, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.items);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgForOf, BottomNavigationItemComponent, ɵngcc2.NgClass, ɵngcc2.NgStyle], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Array)
], BottomNavigationComponent.prototype, "items", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], BottomNavigationComponent.prototype, "border", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], BottomNavigationComponent.prototype, "disabled", void 0);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], BottomNavigationComponent.prototype, "fill", null);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], BottomNavigationComponent.prototype, "itemFlow", null);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], BottomNavigationComponent.prototype, "positionMode", null);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], BottomNavigationComponent.prototype, "themeColor", null);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], BottomNavigationComponent.prototype, "select", void 0);
__decorate([
    HostBinding('class.k-bottom-nav'),
    __metadata("design:type", Boolean)
], BottomNavigationComponent.prototype, "hostClass", void 0);
__decorate([
    HostBinding('class.k-bottom-nav-border'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], BottomNavigationComponent.prototype, "borderClass", null);
__decorate([
    HostBinding('class.k-state-disabled'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], BottomNavigationComponent.prototype, "disabledClass", null);
__decorate([
    HostBinding('attr.role'),
    __metadata("design:type", String)
], BottomNavigationComponent.prototype, "role", void 0);
__decorate([
    HostBinding('attr.dir'),
    __metadata("design:type", String)
], BottomNavigationComponent.prototype, "direction", void 0);
__decorate([
    ContentChild(BottomNavigationItemTemplateDirective, { static: false }),
    __metadata("design:type", BottomNavigationItemTemplateDirective)
], BottomNavigationComponent.prototype, "itemTemplate", void 0);
BottomNavigationComponent = __decorate([ __metadata("design:paramtypes", [LocalizationService,
        ElementRef,
        NgZone,
        ChangeDetectorRef,
        Renderer2])
], BottomNavigationComponent);

const templateDirectives$1 = [BottomNavigationItemTemplateDirective];
const exportedComponents = [BottomNavigationComponent, ...templateDirectives$1];
const declarations$2 = [BottomNavigationItemComponent, ...exportedComponents];
/**
 * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})
 * definition for the BottomNavigation component.
 * @example
 *
 * ```ts-no-run
 * // Import the BottomNavigation module
 * import { BottomNavigationModule } from '@progress/kendo-angular-navigation';
 *
 * // The browser platform with a compiler
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { BrowserModule } from '@angular/platform-browser';
 *
 * import { NgModule } from '@angular/core';
 *
 * // Import the app component
 * import { AppComponent } from './app.component';
 *
 * // Define the app module
 * _@NgModule({
 *     declarations: [AppComponent], // declare app component
 *     imports:      [BrowserModule, BottomNavigationModule], // import BottomNavigation module
 *     bootstrap:    [AppComponent]
 * })
 * export class AppModule {}
 *
 * // Compile and launch the module
 * platformBrowserDynamic().bootstrapModule(AppModule);
 *
 * ```
 */
let BottomNavigationModule = class BottomNavigationModule {
};
BottomNavigationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BottomNavigationModule });
BottomNavigationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BottomNavigationModule_Factory(t) { return new (t || BottomNavigationModule)(); }, imports: [[CommonModule]] });

/**
 * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})
 * definition for the Navigation components.
 *
 * @example
 *
 * ```ts-no-run
 * // Import the Navigation module
 * import { NavigationModule } from '@progress/kendo-angular-navigation';
 *
 * // The browser platform with a compiler
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 *
 * import { NgModule } from '@angular/core';
 *
 * // Import the app component
 * import { AppComponent } from './app.component';
 *
 * // Define the app module
 * _@NgModule({
 *     declarations: [AppComponent], // declare app component
 *     imports:      [BrowserModule, NavigationModule], // import Navigation module
 *     bootstrap:    [AppComponent]
 * })
 * export class AppModule {}
 *
 * // Compile and launch the module
 * platformBrowserDynamic().bootstrapModule(AppModule);
 *
 * ```
 */
let NavigationModule = class NavigationModule {
};
NavigationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NavigationModule });
NavigationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NavigationModule_Factory(t) { return new (t || NavigationModule)(); }, imports: [AppBarModule, BreadCrumbModule, BottomNavigationModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppBarComponent, [{
        type: Component,
        args: [{
                exportAs: 'kendoAppBar',
                selector: 'kendo-appbar',
                template: `
        <ng-content></ng-content>
    `,
                providers: [
                    LocalizationService,
                    {
                        provide: L10N_PREFIX,
                        useValue: 'kendo.appbar.component'
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.LocalizationService }]; }, { hostClass: [{
            type: HostBinding,
            args: ['class.k-appbar']
        }], position: [{
            type: Input
        }], positionMode: [{
            type: Input
        }], themeColor: [{
            type: Input
        }], direction: [{
            type: HostBinding,
            args: ['attr.dir']
        }], topClass: [{
            type: HostBinding,
            args: ['class.k-appbar-top']
        }], bottomClass: [{
            type: HostBinding,
            args: ['class.k-appbar-bottom']
        }], stickyClass: [{
            type: HostBinding,
            args: ['class.k-appbar-sticky']
        }], fixedClass: [{
            type: HostBinding,
            args: ['class.k-appbar-fixed']
        }], staticClass: [{
            type: HostBinding,
            args: ['class.k-appbar-static']
        }], lightClass: [{
            type: HostBinding,
            args: ['class.k-appbar-light']
        }], darkClass: [{
            type: HostBinding,
            args: ['class.k-appbar-dark']
        }], inheritClass: [{
            type: HostBinding,
            args: ['class.k-appbar-inherit']
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppBarSectionComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-appbar-section',
                template: `
        <ng-content></ng-content>
    `
            }]
    }], function () { return []; }, { hostClass: [{
            type: HostBinding,
            args: ['class.k-appbar-section']
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppBarSpacerComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-appbar-spacer',
                template: ``
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { hostClass: [{
            type: HostBinding,
            args: ['class.k-appbar-spacer']
        }], sizedClass: [{
            type: HostBinding,
            args: ['class.k-appbar-spacer-sized']
        }], width: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AppBarModule, { declarations: function () { return [AppBarComponent, AppBarSectionComponent, AppBarSpacerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [AppBarComponent, AppBarSectionComponent, AppBarSpacerComponent]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppBarModule, [{
        type: NgModule,
        args: [{
                declarations: [declarations],
                exports: [exportedModules],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadCrumbItemTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[kendoBreadCrumbItemTemplate]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef, decorators: [{
                type: Optional
            }] }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadCrumbItemComponent, [{
        type: Component,
        args: [{
                selector: '[kendoBreadCrumbItem]',
                template: `
        <ng-template #separator>
            <ng-content select="[kendoBreadCrumbSeparator]"></ng-content>
        </ng-template>

        <ng-container *ngIf="collapseMode === 'wrap'">
            <ng-container *ngTemplateOutlet="separator"></ng-container>
        </ng-container>

        <ng-container *ngIf="!item.context.collapsed">
            <span
                *ngIf="!itemTemplate"
                [ngClass]="{
                    'k-breadcrumb-root-link': item.context.isFirst,
                    'k-breadcrumb-link': index !== 0,
                    'k-breadcrumb-icontext-link': !!item.data.icon && !!item.data.text,
                    'k-breadcrumb-icon-link': !!item.data.icon && !item.data.text,
                    'k-state-disabled': disabled
                }"
                [title]="item.data.title || ''"
                [tabindex]="disabled ? -1 : 0"
                [attr.aria-current]="item.context.isLast ? true : null"
                role="link"
                class="k-cursor-pointer k-flex-none"
            >
                <img *ngIf="item.data.imageUrl" (load)="onImageLoad()" [src]="item.data.imageUrl" class="k-image" role="presentation" />
                <span *ngIf="item.data.icon && !item.data.iconClass" class="k-icon k-i-{{ item.data.icon }}"></span>
                <span *ngIf="item.data.iconClass" class="{{ item.data.iconClass }}"></span>
                {{ item.data.text }}
            </span>
            <ng-template
                *ngIf="itemTemplate"
                [ngTemplateOutlet]="itemTemplate"
                [ngTemplateOutletContext]="{
                    $implicit: item.data,
                    index: index
                }"
            ></ng-template>
        </ng-container>

        <ng-container *ngIf="collapseMode !== 'wrap'">
            <ng-container *ngTemplateOutlet="separator"></ng-container>
        </ng-container>
    `
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { index: [{
            type: Input
        }], hostClasses: [{
            type: HostBinding,
            args: ['class.k-flex-none']
        }, {
            type: HostBinding,
            args: ['class.k-breadcrumb-item']
        }], isRootItem: [{
            type: HostBinding,
            args: ['class.k-breadcrumb-root-item']
        }], isDisabled: [{
            type: HostBinding,
            args: ['attr.aria-disabled']
        }], isLastItem: [{
            type: HostBinding,
            args: ['class.k-breadcrumb-last-item']
        }], item: [{
            type: Input
        }], collapseMode: [{
            type: Input
        }], itemTemplate: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadCrumbListComponent, [{
        type: Component,
        args: [{
                selector: '[kendoBreadCrumbList]',
                template: `
        <ng-container *ngFor="let item of items; let i = index; let isFirst = first; let isLast = last">
            <li
                #renderedItem
                kendoBreadCrumbItem
                *ngIf="!(collapseMode === 'wrap' && isFirst) || isRootItemContainer"
                [attr.${BREADCRUMB_ITEM_INDEX}]="i"
                [item]="item"
                [index]="i"
                [collapseMode]="collapseMode"
                [itemTemplate]="itemTemplate"
            >
                <span kendoBreadCrumbSeparator [icon]="separatorIcon" *ngIf="collapseMode === 'wrap' && !isFirst"></span>
                <span
                    kendoBreadCrumbSeparator
                    [icon]="separatorIcon"
                    *ngIf="collapseMode !== 'wrap' && !isLast && !(item?.context.collapsed && items[i + 1]?.context.collapsed)"
                ></span>
            </li>
        </ng-container>
    `
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { items: [{
            type: Input
        }], collapseMode: [{
            type: Input
        }], itemClick: [{
            type: Output
        }], itemTemplate: [{
            type: Input
        }], separatorIcon: [{
            type: Input
        }], renderedItems: [{
            type: ViewChildren,
            args: [BreadCrumbItemComponent, { static: true }]
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadCrumbComponent, [{
        type: Component,
        args: [{
                exportAs: 'kendoBreadCrumb',
                selector: 'kendo-breadcrumb',
                providers: [
                    LocalizationService,
                    {
                        provide: L10N_PREFIX,
                        useValue: 'kendo.breadcrumb'
                    }
                ],
                template: `
        <ol
            #itemsContainer
            kendoBreadCrumbList
            class="k-breadcrumb-root-item-container"
            *ngIf="collapseMode === 'wrap'"
            [items]="firstItem$ | async"
            [itemTemplate]="itemTemplate?.templateRef"
            [collapseMode]="collapseMode"
            [separatorIcon]="separatorIcon"
            (itemClick)="itemClick.emit($event)"
        ></ol>
        <ol
            #itemsContainer
            kendoBreadCrumbList
            class="k-breadcrumb-container"
            [items]="itemsData$ | async"
            [itemTemplate]="itemTemplate?.templateRef"
            [collapseMode]="collapseMode"
            [separatorIcon]="separatorIcon"
            (itemClick)="itemClick.emit($event)"
            [ngClass]="{ 'k-flex-wrap': collapseMode === 'wrap', 'k-flex-none': collapseMode === 'none' }"
        ></ol>
        <kendo-resize-sensor [rateLimit]="1000" #resizeSensor></kendo-resize-sensor>
    `
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.LocalizationService }]; }, { itemClick: [{
            type: Output
        }], hostClasses: [{
            type: HostBinding,
            args: ['class.k-widget']
        }, {
            type: HostBinding,
            args: ['class.k-breadcrumb']
        }], items: [{
            type: Input
        }], collapseMode: [{
            type: Input
        }], wrapMode: [{
            type: HostBinding,
            args: ['class.k-breadcrumb-wrap']
        }], getDir: [{
            type: HostBinding,
            args: ['attr.dir']
        }], separatorIcon: [{
            type: Input
        }], resizeSensor: [{
            type: ViewChild,
            args: ['resizeSensor', { static: true }]
        }], itemsContainers: [{
            type: ViewChildren,
            args: ['itemsContainer', { read: ElementRef }]
        }], listComponent: [{
            type: ViewChild,
            args: [BreadCrumbListComponent, { static: true }]
        }], itemTemplate: [{
            type: ContentChild,
            args: [BreadCrumbItemTemplateDirective, { static: true }]
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadCrumbSeparatorDirective, [{
        type: Directive,
        args: [{
                selector: '[kendoBreadCrumbSeparator]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.LocalizationService }]; }, { defaultClasses: [{
            type: HostBinding,
            args: ['class.k-breadcrumb-delimiter-icon']
        }, {
            type: HostBinding,
            args: ['class.k-icon']
        }], ariaHidden: [{
            type: HostBinding,
            args: ['attr.aria-hidden']
        }], icon: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BreadCrumbModule, { declarations: function () { return [BreadCrumbComponent, BreadCrumbItemComponent, BreadCrumbListComponent, BreadCrumbItemTemplateDirective, BreadCrumbSeparatorDirective]; }, imports: function () { return [CommonModule, ResizeSensorModule]; }, exports: function () { return [BreadCrumbComponent, BreadCrumbItemComponent, BreadCrumbListComponent, BreadCrumbItemTemplateDirective]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadCrumbModule, [{
        type: NgModule,
        args: [{
                declarations: [declarations$1],
                exports: [exportedModules$1],
                imports: [CommonModule, ResizeSensorModule]
            }]
    }], null, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BottomNavigationItemTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[kendoBottomNavigationItemTemplate]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef, decorators: [{
                type: Optional
            }] }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BottomNavigationItemComponent, [{
        type: Component,
        args: [{
                selector: '[kendoBottomNavigationItem]',
                template: `
        <ng-container *ngIf="!itemTemplate">
            <span *ngIf="itemIcon" class="k-bottom-nav-item-icon" [ngClass]="iconClasses"></span>
            <span *ngIf="item.text" class="k-bottom-nav-item-text">{{item.text}}</span>
        </ng-container>
        <ng-template *ngIf="itemTemplate"
            [ngTemplateOutlet]="itemTemplate?.templateRef"
            [ngTemplateOutletContext]="{ $implicit: item }">
        </ng-template>
    `
            }]
    }], null, { disabledClass: [{
            type: HostBinding,
            args: ['attr.aria-disabled']
        }, {
            type: HostBinding,
            args: ['class.k-state-disabled']
        }], label: [{
            type: HostBinding,
            args: ['attr.aria-label']
        }], tabindex: [{
            type: HostBinding,
            args: ['attr.tabindex']
        }], selectedClass: [{
            type: HostBinding,
            args: ['attr.aria-selected']
        }, {
            type: HostBinding,
            args: ['class.k-state-selected']
        }], itemTemplate: [{
            type: Input
        }], item: [{
            type: Input
        }], index: [{
            type: Input
        }], disabledComponent: [{
            type: Input
        }], selectedIdx: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BottomNavigationComponent, [{
        type: Component,
        args: [{
                exportAs: 'kendoBottomNavigation',
                selector: 'kendo-bottomnavigation',
                providers: [
                    LocalizationService,
                    {
                        provide: L10N_PREFIX,
                        useValue: 'kendo.bottomnavigation'
                    }
                ],
                template: `
        <ng-container *ngIf="items">
            <span kendoBottomNavigationItem
                *ngFor="let item of items; let idx=index"
                role="link"
                class="k-bottom-nav-item"
                [disabledComponent]="disabled"
                [item]="item"
                [index]="idx"
                [selectedIdx]="selectedIdx"
                [itemTemplate]="itemTemplate"
                [attr.${BOTTOMNAVIGATION_ITEM_INDEX}]="idx"
                [ngClass]="item.cssClass"
                [ngStyle]="item.cssStyle">
            </span>
        </ng-container>
    `
            }]
    }], function () { return [{ type: ɵngcc1.LocalizationService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }]; }, { border: [{
            type: Input
        }], disabled: [{
            type: Input
        }], select: [{
            type: Output
        }], hostClass: [{
            type: HostBinding,
            args: ['class.k-bottom-nav']
        }], role: [{
            type: HostBinding,
            args: ['attr.role']
        }], direction: [{
            type: HostBinding,
            args: ['attr.dir']
        }], fill: [{
            type: Input
        }], itemFlow: [{
            type: Input
        }], positionMode: [{
            type: Input
        }], themeColor: [{
            type: Input
        }], borderClass: [{
            type: HostBinding,
            args: ['class.k-bottom-nav-border']
        }], disabledClass: [{
            type: HostBinding,
            args: ['class.k-state-disabled']
        }], items: [{
            type: Input
        }], itemTemplate: [{
            type: ContentChild,
            args: [BottomNavigationItemTemplateDirective, { static: false }]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BottomNavigationModule, { declarations: function () { return [BottomNavigationItemComponent, BottomNavigationComponent, BottomNavigationItemTemplateDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [BottomNavigationComponent, BottomNavigationItemTemplateDirective]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BottomNavigationModule, [{
        type: NgModule,
        args: [{
                declarations: [declarations$2],
                exports: [exportedComponents],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NavigationModule, { exports: [AppBarModule, BreadCrumbModule, BottomNavigationModule] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigationModule, [{
        type: NgModule,
        args: [{
                exports: [
                    AppBarModule,
                    BreadCrumbModule,
                    BottomNavigationModule
                ]
            }]
    }], null, null); })();

// AppBar exports

/**
 * Generated bundle index. Do not edit.
 */

export { BottomNavigationItemComponent, BOTTOMNAVIGATION_ITEM_INDEX, BreadCrumbItemComponent, BreadCrumbListComponent, BREADCRUMB_ITEM_INDEX, BreadCrumbSeparatorDirective, PreventableEvent, AppBarComponent, AppBarSectionComponent, AppBarSpacerComponent, AppBarModule, NavigationModule, BreadCrumbComponent, BreadCrumbItemTemplateDirective, BreadCrumbModule, BottomNavigationComponent, BottomNavigationItemTemplateDirective, BottomNavigationSelectEvent, BottomNavigationModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,