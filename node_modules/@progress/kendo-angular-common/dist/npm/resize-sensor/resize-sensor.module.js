/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var resize_sensor_component_1 = require("./resize-sensor.component");
var resize_batch_service_1 = require("./resize-batch.service");
var ɵngcc0 = require('@angular/core');
var ɵngcc1 = require('./resize-sensor.component');
var COMPONENT_DIRECTIVES = [resize_sensor_component_1.ResizeSensorComponent];
/**
 * Resize Sensor module
 */
var ResizeSensorModule = /** @class */ (function () {
    function ResizeSensorModule() {
    }
ResizeSensorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ResizeSensorModule });
ResizeSensorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ResizeSensorModule_Factory(t) { return new (t || ResizeSensorModule)(); }, providers: [resize_batch_service_1.ResizeBatchService] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ResizeSensorModule, { declarations: [ɵngcc1.ResizeSensorComponent], exports: [ɵngcc1.ResizeSensorComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ResizeSensorModule, [{
        type: core_1.NgModule,
        args: [{
                declarations: [COMPONENT_DIRECTIVES],
                exports: [COMPONENT_DIRECTIVES],
                providers: [resize_batch_service_1.ResizeBatchService]
            }]
    }], function () { return []; }, null); })();
    return ResizeSensorModule;
}());
exports.ResizeSensorModule = ResizeSensorModule;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLXNlbnNvci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbInJlc2l6ZS1zZW5zb3IubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Z0RBTzJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG52YXIgY29yZV8xID0gcmVxdWlyZShcIkBhbmd1bGFyL2NvcmVcIik7XG52YXIgcmVzaXplX3NlbnNvcl9jb21wb25lbnRfMSA9IHJlcXVpcmUoXCIuL3Jlc2l6ZS1zZW5zb3IuY29tcG9uZW50XCIpO1xudmFyIHJlc2l6ZV9iYXRjaF9zZXJ2aWNlXzEgPSByZXF1aXJlKFwiLi9yZXNpemUtYmF0Y2guc2VydmljZVwiKTtcbnZhciBDT01QT05FTlRfRElSRUNUSVZFUyA9IFtyZXNpemVfc2Vuc29yX2NvbXBvbmVudF8xLlJlc2l6ZVNlbnNvckNvbXBvbmVudF07XG4vKipcbiAqIFJlc2l6ZSBTZW5zb3IgbW9kdWxlXG4gKi9cbnZhciBSZXNpemVTZW5zb3JNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVzaXplU2Vuc29yTW9kdWxlKCkge1xuICAgIH1cbiAgICBSZXNpemVTZW5zb3JNb2R1bGUgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xuICAgICAgICBjb3JlXzEuTmdNb2R1bGUoe1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbQ09NUE9ORU5UX0RJUkVDVElWRVNdLFxuICAgICAgICAgICAgZXhwb3J0czogW0NPTVBPTkVOVF9ESVJFQ1RJVkVTXSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW3Jlc2l6ZV9iYXRjaF9zZXJ2aWNlXzEuUmVzaXplQmF0Y2hTZXJ2aWNlXVxuICAgICAgICB9KVxuICAgIF0sIFJlc2l6ZVNlbnNvck1vZHVsZSk7XG4gICAgcmV0dXJuIFJlc2l6ZVNlbnNvck1vZHVsZTtcbn0oKSk7XG5leHBvcnRzLlJlc2l6ZVNlbnNvck1vZHVsZSA9IFJlc2l6ZVNlbnNvck1vZHVsZTtcbiJdfQ==