{"version":3,"file":"document-viewer.component.js","sources":["../../../../../../../libs/ngx-doc-viewer/src/lib/document-viewer.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  ViewChildren,\r\n  QueryList,\r\n  ElementRef,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { EventEmitter } from '@angular/core';\r\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\r\nimport {\r\n  getDocxToHtml,\r\n  getViewerDetails,\r\n  googleCheckSubscription,\r\n  iframeIsLoaded,\r\n  isLocalFile,\r\n  replaceLocalUrl\r\n} from './../../../helper';\r\nimport {\r\n  IFrameReloader\r\n} from './../../../model';\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport type viewerType = 'google' | 'office' | 'mammoth' | 'pdf' | 'url';\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'ngx-doc-viewer',\r\n  templateUrl: 'document-viewer.component.html',\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: block;\r\n      }\r\n      .container {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n      }\r\n      .overlay-popout-google {\r\n        width: 40px;\r\n        height: 40px;\r\n        right: 26px;\r\n        top: 11.5px;\r\n        position: absolute;\r\n        z-index: 1000;\r\n      }\r\n      .overlay-popout-office {\r\n        width: 100px;\r\n        height: 20px;\r\n        right: 0;\r\n        bottom: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n      }\r\n      .overlay-full {\r\n        width: 100%;\r\n        height: 100%;\r\n        right: 0;\r\n        top: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n      }\r\n      iframe {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class NgxDocViewerComponent implements OnChanges, OnDestroy, AfterViewInit {\r\n  @Output() loaded: EventEmitter<void> = new EventEmitter();\r\n  @Input() url = '';\r\n  @Input() queryParams = '';\r\n  @Input() viewerUrl = '';\r\n  @Input() googleCheckInterval = 3000;\r\n  @Input() googleMaxChecks = 5;\r\n  @Input() disableContent: 'none' | 'all' | 'popout' | 'popout-hide' = 'none';\r\n  @Input() googleCheckContentLoaded = true;\r\n  @Input() viewer: viewerType;\r\n  @Input() overrideLocalhost: '';\r\n  @ViewChildren('iframe') iframes: QueryList<ElementRef>;\r\n\r\n  public fullUrl: SafeResourceUrl = null;\r\n  public externalViewer = false;\r\n  public docHtml = '';\r\n  public configuredViewer: viewerType = 'google';\r\n  private checkIFrameSubscription: IFrameReloader;\r\n  private shouldCheckIframe = false;\r\n\r\n  constructor(private domSanitizer: DomSanitizer, private ngZone: NgZone) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.shouldCheckIframe) {\r\n      const iframe = this.iframes?.first\r\n        ?.nativeElement as HTMLIFrameElement;\r\n      if (iframe) {\r\n        this.shouldCheckIframe = false;\r\n        this.reloadIframe(iframe);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.checkIFrameSubscription) {\r\n      this.checkIFrameSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\r\n    if (\r\n      changes &&\r\n      changes.viewer &&\r\n      (changes.viewer.isFirstChange ||\r\n        changes.viewer.currentValue !== changes.viewer.previousValue)\r\n    ) {\r\n      if (\r\n        this.viewer !== 'google' &&\r\n        this.viewer !== 'office' &&\r\n        this.viewer !== 'mammoth' &&\r\n        this.viewer !== 'pdf' &&\r\n        this.viewer !== 'url'\r\n      ) {\r\n        console.error(\r\n          `Unsupported viewer: '${this.viewer}'. Supported viewers: google, office, mammoth and pdf`\r\n        );\r\n      }\r\n      this.configuredViewer = this.viewer;\r\n    }\r\n\r\n    if (\r\n      (changes.url && changes.url.currentValue !== changes.url.previousValue) ||\r\n      (changes.viewer &&\r\n        changes.viewer.currentValue !== changes.viewer.previousValue) ||\r\n      (changes.viewerUrl &&\r\n        changes.viewerUrl.currentValue !== changes.viewerUrl.previousValue)\r\n    ) {\r\n      let viewerDetails = getViewerDetails(\r\n        this.url,\r\n        this.configuredViewer,\r\n        this.queryParams,\r\n        this.viewerUrl\r\n      );\r\n      this.externalViewer = viewerDetails.externalViewer;\r\n      if (viewerDetails.externalViewer && this.overrideLocalhost && isLocalFile(this.url)) {\r\n        const newUrl = replaceLocalUrl(this.url, this.overrideLocalhost);\r\n        viewerDetails = getViewerDetails(\r\n          newUrl,\r\n          this.configuredViewer,\r\n          this.queryParams,\r\n          this.viewerUrl\r\n        );\r\n      }\r\n      this.docHtml = '';\r\n      if (this.checkIFrameSubscription) {\r\n        this.checkIFrameSubscription.unsubscribe();\r\n      }\r\n      if (!this.url) {\r\n        this.fullUrl = null;\r\n      } else if (\r\n        viewerDetails.externalViewer ||\r\n        this.configuredViewer === 'url'\r\n      ) {\r\n        this.fullUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n          viewerDetails.url\r\n        );\r\n        // see:\r\n        // https://stackoverflow.com/questions/40414039/google-docs-viewer-returning-204-responses-no-longer-working-alternatives\r\n        // hack to reload iframe if it's not loaded.\r\n        // would maybe be better to use view.officeapps.live.com but seems not to work with sas token.\r\n        if (\r\n          this.configuredViewer === 'google' &&\r\n          this.googleCheckContentLoaded\r\n        ) {\r\n          this.ngZone.runOutsideAngular(() => {\r\n            // if it's not loaded after the googleIntervalCheck, then open load again.\r\n            const iframe = this.iframes?.first\r\n              ?.nativeElement as HTMLIFrameElement;\r\n            if (iframe) {\r\n              this.reloadIframe(iframe);\r\n            } else {\r\n              this.shouldCheckIframe = true;\r\n            }\r\n          });\r\n        }\r\n      } else if (this.configuredViewer === 'mammoth') {\r\n        this.docHtml = await getDocxToHtml(this.url);\r\n      }\r\n    }\r\n  }\r\n\r\n  private reloadIframe(iframe: HTMLIFrameElement) {\r\n    this.checkIFrameSubscription = googleCheckSubscription();\r\n    this.checkIFrameSubscription.subscribe(\r\n      iframe,\r\n      this.googleCheckInterval,\r\n      this.googleMaxChecks\r\n    );\r\n  }\r\n\r\n  iframeLoaded() {\r\n    const iframe = this.iframes?.first\r\n      ?.nativeElement as HTMLIFrameElement;\r\n    if (iframe && iframeIsLoaded(iframe)) {\r\n      this.loaded.emit(null);\r\n      if (this.checkIFrameSubscription) {\r\n        this.checkIFrameSubscription.unsubscribe();\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}