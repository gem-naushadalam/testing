{"version":3,"file":"http.umd.js","sources":["../../../tslib/tslib.es6.js","../../../packages/http/esm5/src/backends/browser_xhr.js","../../../packages/http/esm5/src/enums.js","../../../packages/http/esm5/src/headers.js","../../../packages/http/esm5/src/base_response_options.js","../../../packages/http/esm5/src/interfaces.js","../../../packages/http/esm5/src/http_utils.js","../../../packages/http/esm5/src/url_search_params.js","../../../packages/http/esm5/src/body.js","../../../packages/http/esm5/src/static_response.js","../../../packages/http/esm5/src/backends/browser_jsonp.js","../../../packages/http/esm5/src/backends/jsonp_backend.js","../../../packages/http/esm5/src/backends/xhr_backend.js","../../../packages/http/esm5/src/base_request_options.js","../../../packages/http/esm5/src/static_request.js","../../../packages/http/esm5/src/http.js","../../../packages/http/esm5/src/http_module.js","../../../packages/http/esm5/src/version.js"],"names":["Injectable","tslib_1.__extends","Observable","getDOM","ArrayBuffer","Blob","NgModule","Version"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((new XMLHttpRequest())); };\n    BrowserXhr.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BrowserXhr.ctorParameters = function () { return []; };\n    return BrowserXhr;\n}());\nexport { BrowserXhr };\nfunction BrowserXhr_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BrowserXhr.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BrowserXhr.ctorParameters;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar RequestMethod = {\n    Get: 0,\n    Post: 1,\n    Put: 2,\n    Delete: 3,\n    Options: 4,\n    Head: 5,\n    Patch: 6,\n};\nexport { RequestMethod };\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\n/** @enum {number} */\nvar ReadyState = {\n    Unsent: 0,\n    Open: 1,\n    HeadersReceived: 2,\n    Loading: 3,\n    Done: 4,\n    Cancelled: 5,\n};\nexport { ReadyState };\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\n/** @enum {number} */\nvar ResponseType = {\n    Basic: 0,\n    Cors: 1,\n    Default: 2,\n    Error: 3,\n    Opaque: 4,\n};\nexport { ResponseType };\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\n/** @enum {number} */\nvar ContentType = {\n    NONE: 0,\n    JSON: 1,\n    FORM: 2,\n    FORM_DATA: 3,\n    TEXT: 4,\n    BLOB: 5,\n    ARRAY_BUFFER: 6,\n};\nexport { ContentType };\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\n/** @enum {number} */\nvar ResponseContentType = {\n    Text: 0,\n    Json: 1,\n    ArrayBuffer: 2,\n    Blob: 3,\n};\nexport { ResponseContentType };\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nHeaders = /** @class */ (function () {\n    // TODO(vicb): any -> string|string[]\n    function Headers(headers) {\n        var _this = this;\n        /**\n         * \\@internal header names are lower case\n         */\n        this._headers = new Map();\n        /**\n         * \\@internal map lower case names to actual names\n         */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var /** @type {?} */ values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    Headers.fromResponseHeaderString = /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    function (headersString) {\n        var /** @type {?} */ headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var /** @type {?} */ index = line.indexOf(':');\n            if (index > 0) {\n                var /** @type {?} */ name_1 = line.slice(0, index);\n                var /** @type {?} */ value = line.slice(index + 1).trim();\n                headers.set(name_1, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.append = /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.delete = /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    Headers.prototype.forEach = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.get = /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     */\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.has = /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     */\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    Headers.prototype.keys = /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.set = /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    Headers.prototype.values = /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    function () { return Array.from(this._headers.values()); };\n    /**\n     * Returns string of all headers.\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    /**\n     * Returns string of all headers.\n     * @return {?}\n     */\n    Headers.prototype.toJSON = /**\n     * Returns string of all headers.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ serialized = {};\n        this._headers.forEach(function (values, name) {\n            var /** @type {?} */ split = [];\n            values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n            serialized[/** @type {?} */ ((_this._normalizedNames.get(name)))] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.getAll = /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     */\n    /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    Headers.prototype.entries = /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.mayBeSetNormalizedName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { Headers };\nfunction Headers_tsickle_Closure_declarations() {\n    /**\n     * \\@internal header names are lower case\n     * @type {?}\n     */\n    Headers.prototype._headers;\n    /**\n     * \\@internal map lower case names to actual names\n     * @type {?}\n     */\n    Headers.prototype._normalizedNames;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { ResponseType } from './enums';\nimport { Headers } from './headers';\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nResponseOptions = /** @class */ (function () {\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    ResponseOptions.prototype.merge = /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { ResponseOptions };\nfunction ResponseOptions_tsickle_Closure_declarations() {\n    /**\n     * String, Object, ArrayBuffer or Blob representing the body of the {\\@link Response}.\n     * @type {?}\n     */\n    ResponseOptions.prototype.body;\n    /**\n     * Http {\\@link http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html status code}\n     * associated with the response.\n     * @type {?}\n     */\n    ResponseOptions.prototype.status;\n    /**\n     * Response {\\@link Headers headers}\n     * @type {?}\n     */\n    ResponseOptions.prototype.headers;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ResponseOptions.prototype.statusText;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ResponseOptions.prototype.type;\n    /** @type {?} */\n    ResponseOptions.prototype.url;\n}\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar BaseResponseOptions = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    BaseResponseOptions.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BaseResponseOptions.ctorParameters = function () { return []; };\n    return BaseResponseOptions;\n}(ResponseOptions));\nexport { BaseResponseOptions };\nfunction BaseResponseOptions_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BaseResponseOptions.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BaseResponseOptions.ctorParameters;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nvar /**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nConnectionBackend = /** @class */ (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nexport { ConnectionBackend };\nfunction ConnectionBackend_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?} request\n     * @return {?}\n     */\n    ConnectionBackend.prototype.createConnection = function (request) { };\n}\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nvar /**\n * Abstract class from which real connections are derived.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nConnection = /** @class */ (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nexport { Connection };\nfunction Connection_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Connection.prototype.readyState;\n    /** @type {?} */\n    Connection.prototype.request;\n    /** @type {?} */\n    Connection.prototype.response;\n}\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nvar /**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nXSRFStrategy = /** @class */ (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nexport { XSRFStrategy };\nfunction XSRFStrategy_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    XSRFStrategy.prototype.configureRequest = function (req) { };\n}\n/**\n * Interface for options to construct a RequestOptions, based on\n * [RequestInit](https://fetch.spec.whatwg.org/#requestinit) from the Fetch spec.\n *\n * @deprecated use \\@angular/common/http instead\n * @record\n */\nexport function RequestOptionsArgs() { }\nfunction RequestOptionsArgs_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.url;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.method;\n    /**\n     * @deprecated from 4.0.0. Use params instead.\n     * @type {?|undefined}\n     */\n    RequestOptionsArgs.prototype.search;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.params;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.headers;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.body;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.withCredentials;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.responseType;\n}\n/**\n * Required structure when constructing new Request();\n * @record\n */\nexport function RequestArgs() { }\nfunction RequestArgs_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RequestArgs.prototype.url;\n}\n/**\n * Interface for options to construct a Response, based on\n * [ResponseInit](https://fetch.spec.whatwg.org/#responseinit) from the Fetch spec.\n *\n * @deprecated use \\@angular/common/http instead\n * @record\n */\nexport function ResponseOptionsArgs() { }\nfunction ResponseOptionsArgs_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.body;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.status;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.statusText;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.headers;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.type;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.url;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { RequestMethod } from './enums';\n/**\n * @param {?} method\n * @return {?}\n */\nexport function normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nexport var /** @type {?} */ isSuccess = function (status) { return (status >= 200 && status < 300); };\n/**\n * @param {?} xhr\n * @return {?}\n */\nexport function getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function stringToArrayBuffer8(input) {\n    var /** @type {?} */ view = new Uint8Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function stringToArrayBuffer(input) {\n    var /** @type {?} */ view = new Uint16Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var /** @type {?} */ map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated use \\@angular/common/http instead\n *\n */\nvar /**\n * @deprecated use \\@angular/common/http instead\n *\n */\nQueryEncoder = /** @class */ (function () {\n    function QueryEncoder() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeKey = /**\n     * @param {?} k\n     * @return {?}\n     */\n    function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeValue = /**\n     * @param {?} v\n     * @return {?}\n     */\n    function (v) { return standardEncoding(v); };\n    return QueryEncoder;\n}());\n/**\n * @deprecated use \\@angular/common/http instead\n *\n */\nexport { QueryEncoder };\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated use \\@angular/common/http instead\n */\nURLSearchParams = /** @class */ (function () {\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.clone = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.has = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.paramsMap.has(param); };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.get = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        var /** @type {?} */ storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.getAll = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.paramsMap.get(param) || []; };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.set = /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.setAll = /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.append = /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.appendAll = /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.replaceAll = /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) {\n                return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v));\n            });\n        });\n        return paramsList.join('&');\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.delete = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated use \\@angular/common/http instead\n */\nexport { URLSearchParams };\nfunction URLSearchParams_tsickle_Closure_declarations() {\n    /** @type {?} */\n    URLSearchParams.prototype.paramsMap;\n    /** @type {?} */\n    URLSearchParams.prototype.rawParams;\n    /** @type {?} */\n    URLSearchParams.prototype.queryEncoder;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringToArrayBuffer } from './http_utils';\nimport { URLSearchParams } from './url_search_params';\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nvar /**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nBody = /** @class */ (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    Body.prototype.json = /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(/** @type {?} */ (this._body));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     */\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     * @param {?=} encodingHint\n     * @return {?}\n     */\n    Body.prototype.text = /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     * @param {?=} encodingHint\n     * @return {?}\n     */\n    function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(/** @type {?} */ (this._body)));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(/** @type {?} */ (this._body)));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     */\n    /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    Body.prototype.arrayBuffer = /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    function () {\n        if (this._body instanceof ArrayBuffer) {\n            return /** @type {?} */ (this._body);\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n      * Returns the request's body as a Blob, assuming that body exists.\n      */\n    /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    Body.prototype.blob = /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    function () {\n        if (this._body instanceof Blob) {\n            return /** @type {?} */ (this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nexport { Body };\nfunction Body_tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Body.prototype._body;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Body } from './body';\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated use \\@angular/common/http instead\n */\nResponse = /** @class */ (function (_super) {\n    tslib_1.__extends(Response, _super);\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = /** @type {?} */ ((responseOptions.status));\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = /** @type {?} */ ((responseOptions.type));\n        _this.url = /** @type {?} */ ((responseOptions.url));\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    Response.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { Response };\nfunction Response_tsickle_Closure_declarations() {\n    /**\n     * One of \"basic\", \"cors\", \"default\", \"error\", or \"opaque\".\n     *\n     * Defaults to \"default\".\n     * @type {?}\n     */\n    Response.prototype.type;\n    /**\n     * True if the response's status is within 200-299\n     * @type {?}\n     */\n    Response.prototype.ok;\n    /**\n     * URL of response.\n     *\n     * Defaults to empty string.\n     * @type {?}\n     */\n    Response.prototype.url;\n    /**\n     * Status code returned by server.\n     *\n     * Defaults to 200.\n     * @type {?}\n     */\n    Response.prototype.status;\n    /**\n     * Text representing the corresponding reason phrase to the `status`, as defined in [ietf rfc 2616\n     * section 6.1.1](https://tools.ietf.org/html/rfc2616#section-6.1.1)\n     *\n     * Defaults to \"OK\"\n     * @type {?}\n     */\n    Response.prototype.statusText;\n    /**\n     * Non-standard property\n     *\n     * Denotes how many of the response body's bytes have been loaded, for example if the response is\n     * the result of a progress event.\n     * @type {?}\n     */\n    Response.prototype.bytesLoaded;\n    /**\n     * Non-standard property\n     *\n     * Denotes how many bytes are expected in the final response body.\n     * @type {?}\n     */\n    Response.prototype.totalBytes;\n    /**\n     * Headers object based on the `Headers` class in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#headers-class).\n     * @type {?}\n     */\n    Response.prototype.headers;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\nvar /** @type {?} */ _nextRequestId = 0;\nexport var /** @type {?} */ JSONP_HOME = '__ng_jsonp__';\nvar /** @type {?} */ _jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */ w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nvar BrowserJsonp = /** @class */ (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserJsonp.prototype.build = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    /**\n     * @return {?}\n     */\n    BrowserJsonp.prototype.nextRequestID = /**\n     * @return {?}\n     */\n    function () { return \"__req\" + _nextRequestId++; };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.requestCallback = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    BrowserJsonp.prototype.exposeConnection = /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    function (id, connection) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.removeConnection = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.send = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { document.body.appendChild(/** @type {?} */ ((node))); };\n    // Remove <script> element from the DOM\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.cleanup = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(/** @type {?} */ ((node)));\n        }\n    };\n    BrowserJsonp.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BrowserJsonp.ctorParameters = function () { return []; };\n    return BrowserJsonp;\n}());\nexport { BrowserJsonp };\nfunction BrowserJsonp_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BrowserJsonp.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BrowserJsonp.ctorParameters;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ResponseOptions } from '../base_response_options';\nimport { ReadyState, RequestMethod, ResponseType } from '../enums';\nimport { ConnectionBackend } from '../interfaces';\nimport { Response } from '../static_response';\nimport { BrowserJsonp } from './browser_jsonp';\nvar /** @type {?} */ JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar /** @type {?} */ JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated use \\@angular/common/http instead\n */\nJSONPConnection = /** @class */ (function () {\n    /** @internal */\n    function JSONPConnection(req, _dom, baseResponseOptions) {\n        var _this = this;\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var /** @type {?} */ id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var /** @type {?} */ callback = _dom.requestCallback(_this._id);\n            var /** @type {?} */ url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var /** @type {?} */ script = _this._script = _dom.build(url);\n            var /** @type {?} */ onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var /** @type {?} */ responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var /** @type {?} */ responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var /** @type {?} */ onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var /** @type {?} */ responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection.prototype.finished = /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @param {?=} data\n     * @return {?}\n     */\n    function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection;\n}());\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { JSONPConnection };\nfunction JSONPConnection_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JSONPConnection.prototype._id;\n    /** @type {?} */\n    JSONPConnection.prototype._script;\n    /** @type {?} */\n    JSONPConnection.prototype._responseData;\n    /** @type {?} */\n    JSONPConnection.prototype._finished;\n    /**\n     * The {\\@link ReadyState} of this request.\n     * @type {?}\n     */\n    JSONPConnection.prototype.readyState;\n    /**\n     * The outgoing HTTP request.\n     * @type {?}\n     */\n    JSONPConnection.prototype.request;\n    /**\n     * An observable that completes with the response, when the request is finished.\n     * @type {?}\n     */\n    JSONPConnection.prototype.response;\n    /** @type {?} */\n    JSONPConnection.prototype._dom;\n    /** @type {?} */\n    JSONPConnection.prototype.baseResponseOptions;\n}\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar JSONPBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(JSONPBackend, _super);\n    /** @internal */\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    JSONPBackend.prototype.createConnection = /**\n     * @param {?} request\n     * @return {?}\n     */\n    function (request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    JSONPBackend.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    JSONPBackend.ctorParameters = function () { return [\n        { type: BrowserJsonp, },\n        { type: ResponseOptions, },\n    ]; };\n    return JSONPBackend;\n}(ConnectionBackend));\nexport { JSONPBackend };\nfunction JSONPBackend_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    JSONPBackend.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    JSONPBackend.ctorParameters;\n    /** @type {?} */\n    JSONPBackend.prototype._browserJSONP;\n    /** @type {?} */\n    JSONPBackend.prototype._baseResponseOptions;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\nimport { ɵgetDOM as getDOM } from '@angular/platform-browser';\nimport { Observable } from 'rxjs/Observable';\nimport { ResponseOptions } from '../base_response_options';\nimport { ContentType, RequestMethod, ResponseContentType, ResponseType } from '../enums';\nimport { Headers } from '../headers';\nimport { getResponseURL, isSuccess } from '../http_utils';\nimport { XSRFStrategy } from '../interfaces';\nimport { Response } from '../static_response';\nimport { BrowserXhr } from './browser_xhr';\nvar /** @type {?} */ XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * @deprecated use \\@angular/common/http instead\n */\nXHRConnection = /** @class */ (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var /** @type {?} */ _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var /** @type {?} */ onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var /** @type {?} */ status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var /** @type {?} */ body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var /** @type {?} */ headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var /** @type {?} */ url = getResponseURL(_xhr) || req.url;\n                var /** @type {?} */ statusText = _xhr.statusText || 'OK';\n                var /** @type {?} */ responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var /** @type {?} */ response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var /** @type {?} */ onError = function (err) {\n                var /** @type {?} */ responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(/** @type {?} */ ((name)), values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    XHRConnection.prototype.setDetectedContentType = /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var /** @type {?} */ blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { XHRConnection };\nfunction XHRConnection_tsickle_Closure_declarations() {\n    /** @type {?} */\n    XHRConnection.prototype.request;\n    /**\n     * Response {\\@link EventEmitter} which emits a single {\\@link Response} value on load event of\n     * `XMLHttpRequest`.\n     * @type {?}\n     */\n    XHRConnection.prototype.response;\n    /** @type {?} */\n    XHRConnection.prototype.readyState;\n}\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated use \\@angular/common/http instead\n */\nCookieXSRFStrategy = /** @class */ (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    CookieXSRFStrategy.prototype.configureRequest = /**\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        var /** @type {?} */ xsrfToken = getDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { CookieXSRFStrategy };\nfunction CookieXSRFStrategy_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CookieXSRFStrategy.prototype._cookieName;\n    /** @type {?} */\n    CookieXSRFStrategy.prototype._headerName;\n}\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated use \\@angular/common/http instead\n */\nvar XHRBackend = /** @class */ (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    XHRBackend.prototype.createConnection = /**\n     * @param {?} request\n     * @return {?}\n     */\n    function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    XHRBackend.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    XHRBackend.ctorParameters = function () { return [\n        { type: BrowserXhr, },\n        { type: ResponseOptions, },\n        { type: XSRFStrategy, },\n    ]; };\n    return XHRBackend;\n}());\nexport { XHRBackend };\nfunction XHRBackend_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    XHRBackend.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    XHRBackend.ctorParameters;\n    /** @type {?} */\n    XHRBackend.prototype._browserXHR;\n    /** @type {?} */\n    XHRBackend.prototype._baseResponseOptions;\n    /** @type {?} */\n    XHRBackend.prototype._xsrfStrategy;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { RequestMethod } from './enums';\nimport { Headers } from './headers';\nimport { normalizeMethodName } from './http_utils';\nimport { URLSearchParams } from './url_search_params';\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nRequestOptions = /** @class */ (function () {\n    // TODO(Dzmitry): remove search when this.search is removed\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        get: /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        set: /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    RequestOptions.prototype.merge = /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    /**\n     * @param {?=} params\n     * @return {?}\n     */\n    RequestOptions.prototype._mergeSearchParams = /**\n     * @param {?=} params\n     * @return {?}\n     */\n    function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    RequestOptions.prototype._parseParams = /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var /** @type {?} */ params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var /** @type {?} */ value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._appendParam = /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { RequestOptions };\nfunction RequestOptions_tsickle_Closure_declarations() {\n    /**\n     * Http method with which to execute a {\\@link Request}.\n     * Acceptable methods are defined in the {\\@link RequestMethod} enum.\n     * @type {?}\n     */\n    RequestOptions.prototype.method;\n    /**\n     * {\\@link Headers} to be attached to a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.headers;\n    /**\n     * Body to be used when creating a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.body;\n    /**\n     * Url with which to perform a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.url;\n    /**\n     * Search parameters to be included in a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.params;\n    /**\n     * Enable use credentials for a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.withCredentials;\n    /** @type {?} */\n    RequestOptions.prototype.responseType;\n}\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar BaseRequestOptions = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    BaseRequestOptions.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BaseRequestOptions.ctorParameters = function () { return []; };\n    return BaseRequestOptions;\n}(RequestOptions));\nexport { BaseRequestOptions };\nfunction BaseRequestOptions_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BaseRequestOptions.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BaseRequestOptions.ctorParameters;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Body } from './body';\nimport { ContentType } from './enums';\nimport { Headers } from './headers';\nimport { normalizeMethodName } from './http_utils';\nimport { URLSearchParams } from './url_search_params';\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nRequest = /** @class */ (function (_super) {\n    tslib_1.__extends(Request, _super);\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var /** @type {?} */ url = requestOptions.url;\n        _this.url = /** @type {?} */ ((requestOptions.url));\n        var /** @type {?} */ paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var /** @type {?} */ params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var /** @type {?} */ prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(/** @type {?} */ ((requestOptions.method)));\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = /** @type {?} */ ((requestOptions.withCredentials));\n        _this.responseType = /** @type {?} */ ((requestOptions.responseType));\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     */\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    Request.prototype.detectContentType = /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    Request.prototype.detectContentTypeFromBody = /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    Request.prototype.getBody = /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { Request };\nfunction Request_tsickle_Closure_declarations() {\n    /**\n     * Http method with which to perform the request.\n     * @type {?}\n     */\n    Request.prototype.method;\n    /**\n     * {\\@link Headers} instance\n     * @type {?}\n     */\n    Request.prototype.headers;\n    /**\n     * Url of the remote resource\n     * @type {?}\n     */\n    Request.prototype.url;\n    /**\n     * Type of the request body *\n     * @type {?}\n     */\n    Request.prototype.contentType;\n    /**\n     * Enable use credentials\n     * @type {?}\n     */\n    Request.prototype.withCredentials;\n    /**\n     * Buffer to store the response\n     * @type {?}\n     */\n    Request.prototype.responseType;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction urlEncodeParams(params) {\n    var /** @type {?} */ searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var /** @type {?} */ value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar /** @type {?} */ noop = function () { };\nvar ɵ0 = noop;\nvar /** @type {?} */ w = typeof window == 'object' ? window : noop;\nvar /** @type {?} */ FormData = (/** @type {?} */ (w /** TODO #9100 */) /** TODO #9100 */)['FormData'] || noop;\nvar /** @type {?} */ Blob = (/** @type {?} */ (w /** TODO #9100 */) /** TODO #9100 */)['Blob'] || noop;\nexport var /** @type {?} */ ArrayBuffer = (/** @type {?} */ (w /** TODO #9100 */) /** TODO #9100 */)['ArrayBuffer'] || noop;\nexport { ɵ0 };\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { RequestOptions } from './base_request_options';\nimport { RequestMethod } from './enums';\nimport { ConnectionBackend } from './interfaces';\nimport { Request } from './static_request';\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */ newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return /** @type {?} */ (newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        })));\n    }\n    return /** @type {?} */ (newOptions.merge(new RequestOptions({ method: method, url: url })));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar Http = /** @class */ (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.request = /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url))));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.get = /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.post = /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.put = /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.delete = /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.patch = /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.head = /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     */\n    /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.options = /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    Http.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Http.ctorParameters = function () { return [\n        { type: ConnectionBackend, },\n        { type: RequestOptions, },\n    ]; };\n    return Http;\n}());\nexport { Http };\nfunction Http_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    Http.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    Http.ctorParameters;\n    /** @type {?} */\n    Http.prototype._backend;\n    /** @type {?} */\n    Http.prototype._defaultOptions;\n}\n/**\n * @deprecated use \\@angular/common/http instead\n */\nvar Jsonp = /** @class */ (function (_super) {\n    tslib_1.__extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Jsonp.prototype.request = /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url)));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    Jsonp.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Jsonp.ctorParameters = function () { return [\n        { type: ConnectionBackend, },\n        { type: RequestOptions, },\n    ]; };\n    return Jsonp;\n}(Http));\nexport { Jsonp };\nfunction Jsonp_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    Jsonp.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    Jsonp.ctorParameters;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from '@angular/core';\nimport { BrowserJsonp } from './backends/browser_jsonp';\nimport { BrowserXhr } from './backends/browser_xhr';\nimport { JSONPBackend } from './backends/jsonp_backend';\nimport { CookieXSRFStrategy, XHRBackend } from './backends/xhr_backend';\nimport { BaseRequestOptions, RequestOptions } from './base_request_options';\nimport { BaseResponseOptions, ResponseOptions } from './base_response_options';\nimport { Http, Jsonp } from './http';\nimport { XSRFStrategy } from './interfaces';\n/**\n * @return {?}\n */\nexport function _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar HttpModule = /** @class */ (function () {\n    function HttpModule() {\n    }\n    HttpModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        // TODO(pascal): use factory type annotations once supported in DI\n                        // issue: https://github.com/angular/angular/issues/3183\n                        { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                        BrowserXhr,\n                        { provide: RequestOptions, useClass: BaseRequestOptions },\n                        { provide: ResponseOptions, useClass: BaseResponseOptions },\n                        XHRBackend,\n                        { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpModule.ctorParameters = function () { return []; };\n    return HttpModule;\n}());\nexport { HttpModule };\nfunction HttpModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    HttpModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    HttpModule.ctorParameters;\n}\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar JsonpModule = /** @class */ (function () {\n    function JsonpModule() {\n    }\n    JsonpModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        // TODO(pascal): use factory type annotations once supported in DI\n                        // issue: https://github.com/angular/angular/issues/3183\n                        { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                        BrowserJsonp,\n                        { provide: RequestOptions, useClass: BaseRequestOptions },\n                        { provide: ResponseOptions, useClass: BaseResponseOptions },\n                        JSONPBackend,\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    JsonpModule.ctorParameters = function () { return []; };\n    return JsonpModule;\n}());\nexport { JsonpModule };\nfunction JsonpModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    JsonpModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    JsonpModule.ctorParameters;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from '@angular/core';\n/**\n * @deprecated use \\@angular/common/http instead\n */\nexport var /** @type {?} */ VERSION = new Version('5.2.11');\n"]}